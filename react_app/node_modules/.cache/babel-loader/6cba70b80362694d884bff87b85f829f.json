{"ast":null,"code":"import _defineProperty from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Profile.js\";\nimport React, { Component } from 'react';\nimport './Profile.css'; // foreign imports\n\nimport Button from '@material-ui/core/Button';\nimport ChangeMedicine from './ChangeMedicine';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; // imgs\n\nimport footerHome from \"./images/web-page-home.png\";\nimport footerProfile from \"./images/iconsmile.png\";\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {\n      allMedicine: [],\n      addOpen: false,\n      sunday: false,\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false,\n      medicine: '',\n      medDesc: '',\n      reward_array: [],\n      username: '',\n      avatar_path: '',\n      navColor: ''\n      /* dialog methods */\n\n    };\n    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOKAdd = _this.handleOKAdd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* change methods */\n\n    _this.onCheck = _this.onCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* rerouting methods */\n\n    _this.goHome = _this.goHome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goReward = _this.goReward.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goAvatar = _this.goAvatar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* image accessor methods */\n\n    _this.getImage = _this.getImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAvatar = _this.getAvatar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* logout method */\n\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* rerender method */\n\n    _this.rerenderParentCallback = _this.rerenderParentCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.REWARDS = {\n      icecream: require('./images/rewards/icecream.png'),\n      baking: require('./images/rewards/baking.png'),\n      ball: require('./images/rewards/ball.png'),\n      beach: require('./images/rewards/beach.png'),\n      bike: require('./images/rewards/bike.png'),\n      book: require('./images/rewards/book.png'),\n      bowling: require('./images/rewards/bowling.png'),\n      card: require('./images/rewards/card.png'),\n      carnival: require('./images/rewards/carnival.png'),\n      chess: require('./images/rewards/chess.png'),\n      clothes: require('./images/rewards/clothes.png'),\n      ferris: require('./images/rewards/ferris.png'),\n      fire: require('./images/rewards/fire.png'),\n      game: require('./images/rewards/game.png'),\n      gift: require('./images/rewards/gift.png'),\n      hamburger: require('./images/rewards/hamburger.png'),\n      hotdog: require('./images/rewards/hotdog.png'),\n      jewelry: require('./images/rewards/jewelry.png'),\n      kart: require('./images/rewards/kart.png'),\n      makeup: require('./images/rewards/makeup.png'),\n      movies: require('./images/rewards/movies.png'),\n      paint: require('./images/rewards/paint.png'),\n      picnic: require('./images/rewards/picnic.png'),\n      pizza: require('./images/rewards/pizza.png'),\n      puzzle: require('./images/rewards/puzzle.png'),\n      shopping: require('./images/rewards/shopping.png'),\n      sneakers: require('./images/rewards/sneakers.png'),\n      swimming: require('./images/rewards/swimming.png'),\n      teddy: require('./images/rewards/teddy.png'),\n      tennis: require('./images/rewards/tennis.png')\n    };\n    _this.AVATARS = {\n      bunny: require('./images/avatars/bunny.png'),\n      cat: require('./images/avatars/cat.png'),\n      dinosaur: require('./images/avatars/dinosaur.png'),\n      dog: require('./images/avatars/dog.png'),\n      frog: require('./images/avatars/frog.png'),\n      monkey: require('./images/avatars/monkey.png'),\n      panda: require('./images/avatars/panda.png'),\n      penguin: require('./images/avatars/penguin.png'),\n      raccoon: require('./images/avatars/raccoon.png'),\n      unicorn: require('./images/avatars/unicorn.png')\n    };\n    _this.server = \"http://localhost:5000\";\n    return _this;\n  }\n  /* Accessor for the reward images. */\n\n\n  _createClass(Profile, [{\n    key: \"getImage\",\n    value: function getImage(name) {\n      return this.REWARDS[name];\n    }\n    /* Accessor for the avatar images. */\n\n  }, {\n    key: \"getAvatar\",\n    value: function getAvatar(name) {\n      return this.AVATARS[name];\n    }\n    /* Rerender profile medicine when medication is edited, deleted, or added. */\n\n  }, {\n    key: \"rerenderParentCallback\",\n    value: function rerenderParentCallback() {\n      this.getProfileMedicine();\n    }\n    /* DYNAMICALLY CHANGING STATE FUNCTIONS  */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onCheck\",\n    value: function onCheck(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.checked));\n    }\n    /* DIALOG FUNCTIONS */\n\n  }, {\n    key: \"handleCancel\",\n    value: function handleCancel() {\n      this.setState({\n        addOpen: false\n      });\n    }\n  }, {\n    key: \"handleClickOpen\",\n    value: function handleClickOpen() {\n      this.setState({\n        addOpen: true\n      });\n    }\n  }, {\n    key: \"handleOKAdd\",\n\n    /* Method for adding a new medication. */\n    value: function handleOKAdd() {\n      var _this2 = this;\n\n      fetch(this.server + \"/addMedicine\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        },\n        body: JSON.stringify({\n          medicine: this.state.medicine,\n          medDesc: this.state.medDesc,\n          sunday: this.state.sunday,\n          monday: this.state.monday,\n          tuesday: this.state.tuesday,\n          wednesday: this.state.wednesday,\n          thursday: this.state.thursday,\n          friday: this.state.friday,\n          saturday: this.state.saturday\n        })\n      }).then(function (res) {\n        return res.text();\n      }).then(function (data) {\n        _this2.getProfileMedicine();\n\n        _this2.setState({\n          medicine: '',\n          medDesc: '',\n          sunday: false,\n          monday: false,\n          tuesday: false,\n          wednesday: false,\n          thursday: false,\n          friday: false,\n          saturday: false,\n          addOpen: false\n        });\n      });\n    }\n    /* ROUTES */\n\n  }, {\n    key: \"goHome\",\n    value: function goHome() {\n      // go /home\n      this.props.history.push(\"/home\");\n    }\n  }, {\n    key: \"goAvatar\",\n    value: function goAvatar() {\n      // go /avatar\n      this.props.history.push(\"/avatar\");\n    }\n  }, {\n    key: \"goReward\",\n    value: function goReward() {\n      // go /reward\n      this.props.history.push(\"/reward\");\n    }\n    /* COMPONENT DID MOUNT\n     *\n     * Gets the medicines, avatars, and rewards for the user.\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.setState({\n        navColor: \"#1871ff\"\n      });\n      fetch(this.server + \"/getProfileMedicine\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this3.setState({\n          allMedicine: data\n        });\n      });\n      fetch(this.server + \"/getAvatar\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (typeof data != 'undefined' && data !== null) {\n          _this3.setState({\n            username: data.username,\n            avatar: data.avatar_path\n          });\n        }\n      });\n      fetch(this.server + \"/getReward\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (typeof data[0] != 'undefined') {\n          _this3.setState({\n            reward_array: data[0]\n          });\n        }\n      });\n    }\n    /*\n     * Handles when a user logs out.\n     * Redirects to the home page once logged out.\n     */\n\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout() {\n      var _this4 = this;\n\n      fetch(this.server + \"/logout\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.text();\n      }).then(function (data) {\n        if (data === \"redirect\") {\n          _this4.props.history.push(\"/\");\n        }\n      });\n    }\n    /*\n     * Fetches all medicines associated with the user from the database.\n     */\n\n  }, {\n    key: \"getProfileMedicine\",\n    value: function getProfileMedicine() {\n      var _this5 = this;\n\n      fetch(this.server + \"/getProfileMedicine\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this5.setState({\n          allMedicine: data\n        });\n      });\n    }\n    /* RENDER METHODS */\n\n    /*\n     * Renders user conditionally.\n     * If no avatar, renders an empty circle.\n     * Else, shows their avatar.\n     */\n\n  }, {\n    key: \"renderUser\",\n    value: function renderUser() {\n      if (this.state.avatar !== \"\" && typeof this.state.avatar !== 'undefined') {\n        var thumbnail = this.getAvatar(this.state.avatar);\n        return React.createElement(\"div\", {\n          className: \"avatarWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, \" \", React.createElement(\"img\", {\n          src: thumbnail,\n          alt: \"thumbnail\",\n          width: \"160\",\n          height: \"160\",\n          onClick: this.goAvatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }), \" \");\n      } else {\n        return React.createElement(\"div\", {\n          id: \"circle\",\n          onClick: this.goAvatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, \"click to edit your avatar!\"));\n      }\n    } // helper method to render medications.\n\n  }, {\n    key: \"getMedList\",\n    value: function getMedList() {\n      var _this6 = this;\n\n      return this.state.allMedicine.map(function (data, index) {\n        return React.createElement(ChangeMedicine, {\n          key: index,\n          med: data.medicine,\n          desc: data.description,\n          sunday: data.sunday,\n          monday: data.monday,\n          tuesday: data.tuesday,\n          wednesday: data.wednesday,\n          thursday: data.thursday,\n          friday: data.friday,\n          saturday: data.saturday,\n          rerenderParentCallback: _this6.rerenderParentCallback,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        });\n      });\n    }\n    /*\n     * Renders medication conditionally.\n     * If no medication associated with the user, displays a message.\n     * Else, shows the medications that the user has.\n     */\n\n  }, {\n    key: \"renderAllMedicine\",\n    value: function renderAllMedicine() {\n      if (this.state.allMedicine.length === 0) {\n        return React.createElement(\"div\", {\n          className: \"med-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          id: \"medicationNoneTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          id: \"med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, \"My Medication\")), React.createElement(\"p\", {\n          id: \"notif\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, \" There is no medication currently linked to your account. \"), React.createElement(Button, {\n          id: \"editbutton\",\n          variant: \"outlined\",\n          onClick: this.handleClickOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, \"+ Add medications\")));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"med-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          id: \"medicationNoneTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          id: \"med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, \"My Medication\")), this.getMedList(), React.createElement(Button, {\n          id: \"editbutton\",\n          variant: \"outlined\",\n          onClick: this.handleClickOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, \"+ Add medications\")));\n      }\n    }\n    /*\n     * Renders reward conditionally.\n     * If no reward associated with the user, displays a message.\n     * Else, shows the reward that the user has.\n     */\n\n  }, {\n    key: \"renderReward\",\n    value: function renderReward() {\n      if (this.state.reward_array.length === 0) {\n        return React.createElement(\"div\", {\n          className: \"rewards-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-rewards\",\n          id: \"rewardsNone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, \"My Current Reward\")), React.createElement(\"p\", {\n          id: \"notif\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, \" You don't have any ongoing rewards.\"), React.createElement(Button, {\n          id: \"editbutton\",\n          variant: \"outlined\",\n          onClick: this.goReward,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }, \"+ Create a new reward\")));\n      } else {\n        var thumbnail = this.getImage(this.state.reward_array.img_path);\n        return React.createElement(\"div\", {\n          className: \"rewards-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-rewards\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, \"My Current Reward\")), React.createElement(\"div\", {\n          className: \"rewards-home-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: thumbnail,\n          alt: \"icecweam\",\n          width: \"60\",\n          height: \"60\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"rewards-home-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, \"Description: \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, this.state.reward_array.desc)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, \"You have \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, this.state.reward_array.goalCount - this.state.reward_array.actualCount, \" \"), \" day(s) left until you reach your reward for \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        }, \" \", this.state.reward_array.img_path), \"!\")))));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"containerProfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.addOpen,\n        onClose: this.handleCancel,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Add medication\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"Please enter the following information.\"), React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        label: \"Medication\",\n        name: \"medicine\",\n        value: this.state.medicine,\n        onChange: this.onChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        label: \"Description\",\n        name: \"medDesc\",\n        value: this.state.medDesc,\n        onChange: this.onChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.sunday,\n          onChange: this.onCheck,\n          name: \"sunday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456\n          },\n          __self: this\n        }),\n        label: \"Sunday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.monday,\n          onChange: this.onCheck,\n          name: \"monday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465\n          },\n          __self: this\n        }),\n        label: \"Monday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.tuesday,\n          onChange: this.onCheck,\n          name: \"tuesday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }),\n        label: \"Tuesday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.wednesday,\n          onChange: this.onCheck,\n          name: \"wednesday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483\n          },\n          __self: this\n        }),\n        label: \"Wednesday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.thursday,\n          onChange: this.onCheck,\n          name: \"thursday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492\n          },\n          __self: this\n        }),\n        label: \"Thursday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.friday,\n          onChange: this.onCheck,\n          name: \"friday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501\n          },\n          __self: this\n        }),\n        label: \"Friday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.saturday,\n          onChange: this.onCheck,\n          name: \"saturday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }),\n        label: \"Saturday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"popup-button-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCancel,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleOKAdd,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, \"OK\")))), React.createElement(\"div\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, this.renderUser(), React.createElement(\"div\", {\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, this.state.username)), this.renderAllMedicine(), this.renderReward(), React.createElement(\"div\", {\n        className: \"logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Logout\",\n        id: \"submitButton\",\n        onClick: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"footer\",\n        style: {\n          boxShadow: this.state.scroll\n        },\n        onScroll: this.handleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"toHome\",\n        onClick: this.goHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: footerHome,\n        alt: \"footer-home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, \"home\")), React.createElement(\"div\", {\n        className: \"toProfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: footerProfile,\n        alt: \"footer-profile\",\n        style: {\n          backgroundColor: this.state.navColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          color: this.state.navColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, \"me\"))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Profile.js"],"names":["React","Component","Button","ChangeMedicine","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Checkbox","FormGroup","FormControlLabel","footerHome","footerProfile","Profile","props","state","allMedicine","addOpen","sunday","monday","tuesday","wednesday","thursday","friday","saturday","medicine","medDesc","reward_array","username","avatar_path","navColor","handleCancel","bind","handleOKAdd","handleClickOpen","onCheck","onChange","goHome","goReward","goAvatar","getImage","getAvatar","handleLogout","rerenderParentCallback","REWARDS","icecream","require","baking","ball","beach","bike","book","bowling","card","carnival","chess","clothes","ferris","fire","game","gift","hamburger","hotdog","jewelry","kart","makeup","movies","paint","picnic","pizza","puzzle","shopping","sneakers","swimming","teddy","tennis","AVATARS","bunny","cat","dinosaur","dog","frog","monkey","panda","penguin","raccoon","unicorn","server","name","getProfileMedicine","e","setState","target","value","checked","fetch","mode","credentials","method","headers","body","JSON","stringify","then","res","text","data","history","push","json","avatar","thumbnail","map","index","description","length","getMedList","img_path","desc","goalCount","actualCount","renderUser","renderAllMedicine","renderReward","boxShadow","scroll","handleScroll","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Profile.css';\n\n// foreign imports\nimport Button from '@material-ui/core/Button';\nimport ChangeMedicine from './ChangeMedicine';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// imgs\nimport footerHome from \"./images/web-page-home.png\";\nimport footerProfile from \"./images/iconsmile.png\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allMedicine: [],\n      addOpen: false,\n      sunday: false,\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false,\n      medicine: '',\n      medDesc: '',\n      reward_array: [],\n      username:'',\n      avatar_path: '',\n      navColor: ''\n    }\n\n    /* dialog methods */\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleOKAdd = this.handleOKAdd.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n\n    /* change methods */\n    this.onCheck = this.onCheck.bind(this);\n    this.onChange = this.onChange.bind(this);\n\n    /* rerouting methods */\n    this.goHome = this.goHome.bind(this);\n    this.goReward = this.goReward.bind(this);\n    this.goAvatar = this.goAvatar.bind(this);\n\n    /* image accessor methods */\n    this.getImage = this.getImage.bind(this);\n    this.getAvatar = this.getAvatar.bind(this);\n\n    /* logout method */\n    this.handleLogout = this.handleLogout.bind(this);\n\n    /* rerender method */\n    this.rerenderParentCallback = this.rerenderParentCallback.bind(this);\n\n    this.REWARDS = {\n      icecream: require('./images/rewards/icecream.png'),\n      baking: require('./images/rewards/baking.png'),\n      ball: require('./images/rewards/ball.png'),\n      beach: require('./images/rewards/beach.png'),\n      bike: require('./images/rewards/bike.png'),\n      book: require('./images/rewards/book.png'),\n      bowling: require('./images/rewards/bowling.png'),\n      card: require('./images/rewards/card.png'),\n      carnival: require('./images/rewards/carnival.png'),\n      chess: require('./images/rewards/chess.png'),\n      clothes: require('./images/rewards/clothes.png'),\n      ferris: require('./images/rewards/ferris.png'),\n      fire: require('./images/rewards/fire.png'),\n      game: require('./images/rewards/game.png'),\n      gift: require('./images/rewards/gift.png'),\n      hamburger: require('./images/rewards/hamburger.png'),\n      hotdog: require('./images/rewards/hotdog.png'),\n      jewelry: require('./images/rewards/jewelry.png'),\n      kart: require('./images/rewards/kart.png'),\n      makeup: require('./images/rewards/makeup.png'),\n      movies: require('./images/rewards/movies.png'),\n      paint: require('./images/rewards/paint.png'),\n      picnic: require('./images/rewards/picnic.png'),\n      pizza: require('./images/rewards/pizza.png'),\n      puzzle: require('./images/rewards/puzzle.png'),\n      shopping: require('./images/rewards/shopping.png'),\n      sneakers: require('./images/rewards/sneakers.png'),\n      swimming: require('./images/rewards/swimming.png'),\n      teddy: require('./images/rewards/teddy.png'),\n      tennis: require('./images/rewards/tennis.png')\n    }\n\n    this.AVATARS = {\n      bunny: require('./images/avatars/bunny.png'),\n      cat: require('./images/avatars/cat.png'),\n      dinosaur: require('./images/avatars/dinosaur.png'),\n      dog: require('./images/avatars/dog.png'),\n      frog: require('./images/avatars/frog.png'),\n      monkey: require('./images/avatars/monkey.png'),\n      panda: require('./images/avatars/panda.png'),\n      penguin: require('./images/avatars/penguin.png'),\n      raccoon: require('./images/avatars/raccoon.png'),\n      unicorn: require('./images/avatars/unicorn.png'),\n    }\n\n      this.server = \"http://localhost:5000\";\n  }\n\n  /* Accessor for the reward images. */\n  getImage(name) {\n    return this.REWARDS[name];\n  }\n\n  /* Accessor for the avatar images. */\n  getAvatar(name) {\n    return this.AVATARS[name];\n  }\n\n  /* Rerender profile medicine when medication is edited, deleted, or added. */\n  rerenderParentCallback(){\n    this.getProfileMedicine();\n  }\n\n   /* DYNAMICALLY CHANGING STATE FUNCTIONS  */\n  onChange(e) {\n       this.setState({\n           [e.target.name]: e.target.value\n       });\n   }\n\n   onCheck(e) {\n     this.setState({\n         [e.target.name]: e.target.checked\n     });\n   }\n\n   /* DIALOG FUNCTIONS */\n   handleCancel() {\n     this.setState({ addOpen: false });\n   };\n\n   handleClickOpen(){\n     this.setState({ addOpen: true });\n   };\n\n   /* Method for adding a new medication. */\n   handleOKAdd(){\n     fetch(this.server + \"/addMedicine\", {\n         mode: 'cors',\n         credentials: 'include',\n         method: 'POST',\n         headers: {\n           'Accept': 'application/json',\n           'Content-Type': 'application/json',\n           'Access-Control-Allow-Credentials': true,\n         },\n           body: JSON.stringify({\n             medicine: this.state.medicine,\n             medDesc: this.state.medDesc,\n             sunday: this.state.sunday,\n             monday: this.state.monday,\n             tuesday: this.state.tuesday,\n             wednesday: this.state.wednesday,\n             thursday: this.state.thursday,\n             friday: this.state.friday,\n             saturday: this.state.saturday\n           })\n         })\n         .then(res => res.text())\n         .then(data => {\n           this.getProfileMedicine();\n\n           this.setState({medicine: '', medDesc: '',\n           sunday: false, monday:false, tuesday: false, wednesday:false, thursday:false, friday:false, saturday:false,\n           addOpen: false})\n         });\n   }\n\n  /* ROUTES */\n  goHome(){\n    // go /home\n    this.props.history.push(\"/home\");\n  }\n\n  goAvatar(){\n    // go /avatar\n    this.props.history.push(\"/avatar\");\n  }\n\n  goReward(){\n    // go /reward\n    this.props.history.push(\"/reward\");\n  }\n\n  /* COMPONENT DID MOUNT\n   *\n   * Gets the medicines, avatars, and rewards for the user.\n   */\n  componentDidMount(){\n    this.setState({navColor: \"#1871ff\"});\n\n    fetch(this.server + \"/getProfileMedicine\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setState({allMedicine: data})\n    });\n\n    fetch(this.server + \"/getAvatar\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      if (typeof data != 'undefined' && data !== null){\n          this.setState({username: data.username, avatar: data.avatar_path});\n      }\n    });\n    fetch(this.server + \"/getReward\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      if (typeof data[0] != 'undefined'){\n          this.setState( {reward_array: data[0]} )\n      }\n    });\n  }\n\n  /*\n   * Handles when a user logs out.\n   * Redirects to the home page once logged out.\n   */\n  handleLogout() {\n      fetch(this.server + \"/logout\", {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'GET',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Credentials': true,\n          }\n      })\n          .then(res => res.text())\n          .then(data => {\n              if (data === \"redirect\"){\n                  this.props.history.push(\"/\")\n              }\n          });\n  }\n\n  /*\n   * Fetches all medicines associated with the user from the database.\n   */\n  getProfileMedicine(){\n    fetch(this.server + \"/getProfileMedicine\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setState({allMedicine: data})\n    });\n  }\n\n  /* RENDER METHODS */\n\n  /*\n   * Renders user conditionally.\n   * If no avatar, renders an empty circle.\n   * Else, shows their avatar.\n   */\n  renderUser(){\n    if (this.state.avatar !== \"\" && typeof this.state.avatar !== 'undefined'){\n      var thumbnail = this.getAvatar(this.state.avatar);\n\n      return ( <div className=\"avatarWrapper\"> <img src={thumbnail} alt=\"thumbnail\" width=\"160\" height=\"160\" onClick ={this.goAvatar}/> </div>);\n    }\n    else{\n      return (<div id = \"circle\" onClick ={this.goAvatar}> <span>click to edit your avatar!</span></div>);\n    }\n  }\n\n  // helper method to render medications.\n  getMedList(){\n    return (this.state.allMedicine.map((data, index) => {\n      return (<ChangeMedicine key= {index} med={data.medicine} desc={data.description}\n              sunday={data.sunday} monday={data.monday} tuesday={data.tuesday}\n              wednesday={data.wednesday} thursday={data.thursday} friday={data.friday}\n              saturday={data.saturday}\n              rerenderParentCallback={this.rerenderParentCallback}/>) })\n      );\n  }\n\n  /*\n   * Renders medication conditionally.\n   * If no medication associated with the user, displays a message.\n   * Else, shows the medications that the user has.\n   */\n  renderAllMedicine(){\n    if (this.state.allMedicine.length === 0){\n      return (\n        <div className = \"med-container\">\n          <div className = \"deargod-med\">\n            <div className=\"deargod-top\" id=\"medicationNoneTop\">\n              <p className=\"deargodTopTitle\" id=\"med\">\n                My Medication\n              </p>\n            </div>\n            <p id=\"notif\"> There is no medication currently linked to your account. </p>\n            <Button id = \"editbutton\" variant=\"outlined\" onClick ={this.handleClickOpen}>\n              + Add medications\n            </Button>\n          </div>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"med-container\">\n          <div className = \"deargod-med\">\n              <div className=\"deargod-top\" id=\"medicationNoneTop\">\n                  <p className=\"deargodTopTitle\" id=\"med\">\n                      My Medication\n                  </p>\n              </div>\n\n            {this.getMedList()}\n\n            <Button id = \"editbutton\" variant=\"outlined\" onClick ={this.handleClickOpen}>\n              + Add medications\n            </Button>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  /*\n   * Renders reward conditionally.\n   * If no reward associated with the user, displays a message.\n   * Else, shows the reward that the user has.\n   */\n  renderReward(){\n    if (this.state.reward_array.length === 0 ){\n      return (\n        <div className = \"rewards-container\">\n          <div className = \"deargod-rewards\" id=\"rewardsNone\">\n            <div className=\"deargod-top\">\n              <p className=\"deargodTopTitle\">\n                My Current Reward\n              </p>\n            </div>\n              <p id=\"notif\"> You don't have any ongoing rewards.</p>\n              <Button id = \"editbutton\" variant=\"outlined\" onClick = {this.goReward}>\n                + Create a new reward\n              </Button>\n          </div>\n        </div>\n      );\n    }\n    else {\n      var thumbnail = this.getImage(this.state.reward_array.img_path);\n\n      return (\n        <div className=\"rewards-container\">\n          <div className = \"deargod-rewards\">\n            <div className=\"deargod-top\">\n              <p className=\"deargodTopTitle\">\n                My Current Reward\n              </p>\n            </div>\n            <div className = \"rewards-home-inner\">\n              <img src={thumbnail} alt=\"icecweam\" width=\"60\" height=\"60\"/>\n              <div className = \"rewards-home-info\">\n                <p>Description: <span>{this.state.reward_array.desc}</span></p>\n                <p>You have <span>{this.state.reward_array.goalCount - this.state.reward_array.actualCount} </span> day(s) left until\n                  you reach your reward for <span> {this.state.reward_array.img_path}</span>!\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className = \"containerProfile\">\n\n        <Dialog\n          open={this.state.addOpen}\n          onClose={this.handleCancel}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\">\n          <DialogTitle id=\"alert-dialog-title\">{\"Add medication\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Please enter the following information.\n            </DialogContentText>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"Medication\"\n                name=\"medicine\"\n                value={this.state.medicine} onChange={this.onChange}\n                fullWidth\n              />\n              <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  label=\"Description\"\n                  name=\"medDesc\"\n                  value={this.state.medDesc} onChange={this.onChange}\n                  fullWidth\n                />\n                <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                          checked={this.state.sunday}\n                          onChange={this.onCheck}\n                          name=\"sunday\"\n                          />\n                        }\n                        label=\"Sunday\"/>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                          checked={this.state.monday}\n                          onChange={this.onCheck}\n                          name=\"monday\"\n                          />\n                        }\n                        label=\"Monday\"/>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                          checked={this.state.tuesday}\n                          onChange={this.onCheck}\n                          name=\"tuesday\"\n                          />\n                        }\n                        label=\"Tuesday\"/>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                          checked={this.state.wednesday}\n                          onChange={this.onCheck}\n                          name=\"wednesday\"\n                          />\n                        }\n                        label=\"Wednesday\"/>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                          checked={this.state.thursday}\n                          onChange={this.onCheck}\n                          name=\"thursday\"\n                          />\n                        }\n                        label=\"Thursday\"/>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                          checked={this.state.friday}\n                          onChange={this.onCheck}\n                          name=\"friday\"\n                          />\n                        }\n                        label=\"Friday\"/>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                          checked={this.state.saturday}\n                          onChange={this.onCheck}\n                          name=\"saturday\"\n                          />\n                        }\n                        label=\"Saturday\"/>\n              </FormGroup>\n          </DialogContent>\n          <div className=\"popup-button-wrapper\">\n            <DialogActions>\n              <Button onClick={this.handleCancel} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={this.handleOKAdd} color=\"primary\" autoFocus>\n                OK\n              </Button>\n            </DialogActions>\n          </div>\n        </Dialog>\n\n\n          <div className = \"user\">\n            {this.renderUser()}\n            <div id = \"name\">\n              {this.state.username}\n            </div>\n          </div>\n\n          {this.renderAllMedicine()}\n\n          {this.renderReward()}\n\n          <div className=\"logout\">\n              <input type=\"submit\" value=\"Logout\" id =\"submitButton\" onClick ={this.handleLogout}/>\n          </div>\n\n          <div className=\"footer\" style={{boxShadow: this.state.scroll}} onScroll={this.handleScroll}>\n            <div className=\"toHome\" onClick = {this.goHome}>\n              <img src={footerHome} alt=\"footer-home\"></img>\n              <p >home</p>\n            </div>\n            <div className=\"toProfile\">\n              <img src={footerProfile} alt=\"footer-profile\" style={{backgroundColor: this.state.navColor}}/>\n              <p style={{color: this.state.navColor}}>me</p>\n            </div>\n          </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}