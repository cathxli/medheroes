{"ast":null,"code":"import _defineProperty from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Home.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Medicine from './Medicine';\nimport Calendar from 'react-calendar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport iconprofile from \"./images/iconprofile2.png\"; // import moment from \"moment\";\n\nimport moment from \"moment-timezone\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      medicine: '',\n      medicine_array: [],\n      reward_array: [],\n      image: '',\n      avatar: '',\n      open: false,\n      medDesc: '',\n      Sunday: false,\n      completed: null,\n      username: ''\n    };\n    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOK = _this.handleOK.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderReward = _this.renderReward.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderMedicine = _this.renderMedicine.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMedList = _this.getMedList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goProfile = _this.goProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getImage = _this.getImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAvatar = _this.getAvatar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.routeChange = _this.routeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCheck = _this.onCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.rerenderParentCallback = _this.rerenderParentCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.IMAGES = {\n      icecream: require('./images/rewards/icecream.png'),\n      // statically analyzed\n      baking: require('./images/rewards/baking.png'),\n      ball: require('./images/rewards/ball.png'),\n      beach: require('./images/rewards/beach.png'),\n      bike: require('./images/rewards/bike.png'),\n      book: require('./images/rewards/book.png'),\n      bowling: require('./images/rewards/bowling.png'),\n      card: require('./images/rewards/card.png'),\n      carnival: require('./images/rewards/carnival.png'),\n      chess: require('./images/rewards/chess.png'),\n      //10\n      clothes: require('./images/rewards/clothes.png'),\n      ferris: require('./images/rewards/ferris.png'),\n      fire: require('./images/rewards/fire.png'),\n      game: require('./images/rewards/game.png'),\n      gift: require('./images/rewards/gift.png'),\n      hamburger: require('./images/rewards/hamburger.png'),\n      hotdog: require('./images/rewards/hotdog.png'),\n      jewelry: require('./images/rewards/jewelry.png'),\n      kart: require('./images/rewards/kart.png'),\n      makeup: require('./images/rewards/makeup.png'),\n      //10\n      movies: require('./images/rewards/movies.png'),\n      paint: require('./images/rewards/paint.png'),\n      picnic: require('./images/rewards/picnic.png'),\n      pizza: require('./images/rewards/pizza.png'),\n      puzzle: require('./images/rewards/puzzle.png'),\n      shopping: require('./images/rewards/shopping.png'),\n      sneakers: require('./images/rewards/sneakers.png'),\n      swimming: require('./images/rewards/swimming.png'),\n      teddy: require('./images/rewards/teddy.png'),\n      tennis: require('./images/rewards/tennis.png')\n    };\n    _this.HEADS = {\n      bunny: require('./images/heads/bunny.png'),\n      // statically analyzed\n      cat: require('./images/heads/cat.png'),\n      dinosaur: require('./images/heads/dinosaur.png'),\n      dog: require('./images/heads/dog.png'),\n      frog: require('./images/heads/frog.png'),\n      monkey: require('./images/heads/monkey.png'),\n      panda: require('./images/heads/panda.png'),\n      penguin: require('./images/heads/penguin.png'),\n      raccoon: require('./images/heads/raccoon.png'),\n      unicorn: require('./images/heads/unicorn.png') //10\n\n    };\n    _this.server = \"http://localhost:5000\";\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"rerenderParentCallback\",\n    value: function rerenderParentCallback() {\n      this.setState({\n        reward_array: []\n      });\n    }\n  }, {\n    key: \"getImage\",\n    value: function getImage(name) {\n      // dynamically invoked\n      return this.IMAGES[name];\n    }\n  }, {\n    key: \"getAvatar\",\n    value: function getAvatar(name) {\n      // dynamically invoked\n      return this.HEADS[name];\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onCheck\",\n    value: function onCheck(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.checked));\n    }\n  }, {\n    key: \"routeChange\",\n    value: function routeChange(event) {\n      //this.setState({toProfile: true});\n      this.props.history.push(\"/profile\"); // event.preventDefault()\n      // console.log(\"succesfully here!?\");\n      //\n      // fetch(\"http://localhost:5000/check\", {\n      //   mode: 'cors',\n      //   credentials: 'include',\n      //   method: 'POST',\n      //   headers: {\n      //     'Accept': 'application/json',\n      //     'Content-Type': 'application/json',\n      //     'Access-Control-Allow-Credentials': true,\n      //   }\n      // }).catch(err => {\n      //   // handle err\n      //   console.log(\"this bitch did not work\")\n      // })\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {//console.log(\"component will mount\")\n      // });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n      today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n      fetch(this.server + \"/getMedicine?date=\" + today, {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var thing = [];\n\n        for (var x in data) {\n          thing.push(data[x].medicine);\n        }\n\n        _this2.setState({\n          medicine_array: thing\n        });\n      });\n      fetch(this.server + \"/getReward\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        //console.log(data[0])\n        //console.log(data[0])\n        if (typeof data[0] != 'undefined') {\n          _this2.setState({\n            reward_array: data[0],\n            image: data[0].img_path\n          });\n        }\n      });\n      fetch(this.server + \"/getAvatar\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(\"USER DATA\", data);\n        console.log(\"Username?\", data.username);\n\n        if (typeof data != 'undefined') {\n          _this2.setState({\n            username: data.username,\n            avatar: data.avatar_path\n          });\n        }\n      });\n      fetch(this.server + \"/getCompleted\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(data);\n\n        if (data.length !== 0) {\n          // var completed_dates = []\n          // for (var i in data){\n          //   completed_dates.push(data[i].completed_dates);\n          // }\n          _this2.setState({\n            completed: data[0].completed_dates\n          });\n        } else {\n          _this2.setState({\n            completed: []\n          });\n        }\n      }); // console.log(completed_dates)\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n      today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n      fetch(this.server + \"/addMedicine\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        },\n        body: JSON.stringify({\n          medicine: this.state.medicine\n        })\n      }).then(function (res) {\n        return res.text();\n      }).then(function (data) {\n        // console.log(\"hiiii\")\n        // this.setState({form: false})\n        fetch(_this3.server + \"/getMedicine?date=\" + today, {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Credentials': true\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var thing = [];\n\n          for (var x in data) {\n            thing.push(data[x].medicine);\n          }\n\n          _this3.setState({\n            medicine_array: thing\n          });\n        }); // if (data.data.code === 200){\n        //\n        // }\n        // console.log(data);\n        //return res;\n        // process returned data\n      }).catch(function (err) {\n        // handle err\n        console.log(err);\n      });\n    } // showForm(){\n    //   if (this.state.form === true ){\n    //     return (\n    //       <div className = \"display-form\">\n    //         <form onSubmit={this.handleSubmit}>\n    //\n    //         <input type=\"text\" id =\"medicine-add\" name=\"medicine\" onChange={this.onChange} value={this.state.medicine}/>\n    //\n    //         <input type=\"submit\" value=\"Add\" id =\"submitButton-home\" onClick={this.removeForm}/>\n    //         </form>\n    //       </div>\n    //     );\n    //   }\n    // }\n    //\n    // setForm(){\n    //   this.setState({form: true});\n    // }\n\n  }, {\n    key: \"getMedList\",\n    value: function getMedList() {\n      var _this4 = this;\n\n      return this.state.medicine_array.map(function (data, index) {\n        return React.createElement(Medicine, {\n          key: index,\n          med: data,\n          rerenderParentCallback: _this4.rerenderParentCallback,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        });\n      }); // return (this.state.medicine_array.map( ( med ) => {\n      //   console.log(med)\n      //     return (<Medicine medicine={med} />) ;\n      //   });\n      // )\n    }\n  }, {\n    key: \"renderUser\",\n    value: function renderUser() {\n      console.log(\"THIS IS THE AVATAR\", this.state.avatar);\n\n      if (this.state.avatar !== \"\" && typeof this.state.avatar !== 'undefined') {\n        var thumbnail = this.getAvatar(this.state.avatar);\n        return React.createElement(\"img\", {\n          src: thumbnail,\n          alt: \"thumbnail\",\n          width: \"160\",\n          height: \"160\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          id: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, \" \");\n      }\n    } //\n    // <Button id = \"editbutton\" variant=\"outlined\" onClick ={this.handleClickOpen}>\n    //   + Add medications\n    // </Button>\n\n    /* Render the medicines if they exist. AKA, get request here... otherwise,\n     * just render the edit button\n    */\n\n  }, {\n    key: \"renderMedicine\",\n    value: function renderMedicine() {\n      if (this.state.medicine_array.length === 0) {\n        return React.createElement(\"div\", {\n          className: \"deargod-med\",\n          id: \"medicationNone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          id: \"notif\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, \" You don't have any medications for today.\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"med-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          id: \"medicationNoneTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          id: \"med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }, \"Today's Medication\")), React.createElement(\"div\", {\n          className: \"deargod-med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }, this.getMedList()));\n      }\n    }\n  }, {\n    key: \"goProfile\",\n    value: function goProfile() {\n      this.props.history.push(\"/reward\");\n    } // oh fuck bugs\n    // cannot render img and also wont render at beginning\n\n  }, {\n    key: \"renderReward\",\n    value: function renderReward() {\n      // console.log( this.state.reward_array.desc )\n      // console.log( this.state.reward_array.length )\n      // console.log(this.state.reward_array.desc == undefined)\n      //|| typeof this.state.reward_array.img_path === 'undefined'\n      if (this.state.reward_array.length === 0) {\n        //console.log(\"hi\")\n        return React.createElement(\"div\", {\n          className: \"deargod-rewards\",\n          id: \"rewardsNone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          id: \"notif\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, \" You don't have any ongoing rewards.\"));\n      } else {\n        //console.log( this.state.reward_array.img_path);\n        // this.getImage(this.state.reward_array.img_path)\n        var thumbnail = this.getImage(this.state.reward_array.img_path); // //<Image source={{ uri: this.state.reward_array.img_path }} />\n\n        return (//  CATH: changed this div from rewardbox to deargod-rewards\n          React.createElement(\"div\", {\n            className: \"deargod-rewards\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 438\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"deargod-top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 440\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"deargodTopTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441\n            },\n            __self: this\n          }, \"My Current Reward\")), React.createElement(\"img\", {\n            src: thumbnail,\n            alt: \"icecweam\",\n            width: \"40\",\n            height: \"40\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 445\n            },\n            __self: this\n          }))\n        );\n      } //}\n\n    }\n  }, {\n    key: \"handleCancel\",\n    value: function handleCancel() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"handleClickOpen\",\n    value: function handleClickOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleOK\",\n    value: function handleOK() {\n      //this.setState({ open: true });\n      // do stuff\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      if (this.state.toProfile === true) {\n        return React.createElement(Redirect, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.completed === null || this.state.username === \"\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479\n          },\n          __self: this\n        }, \" Loading... \");\n      } else {\n        var tileClassName = function tileClassName(_ref) {\n          var date = _ref.date,\n              view = _ref.view;\n          var getDate = moment(date).format(\"YYYY/MM/DD\"); // console.log(\"The days I have are\", this.state.completed)\n          // console.log(\"Today, is the day of \", getDate)\n          // console.log(this.state.completed.includes(getDate))\n          // console.log(this.state.completed[0] )\n\n          if (_this5.state.completed.includes(getDate)) {\n            // console.log(\"here\")\n            return \"highlight-day\";\n          }\n\n          return null;\n        };\n\n        return React.createElement(\"div\", {\n          className: \"containerHome\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497\n          },\n          __self: this\n        }, React.createElement(Dialog, {\n          open: this.state.open,\n          onClose: this.handleCancel,\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        }, React.createElement(DialogTitle, {\n          id: \"alert-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505\n          },\n          __self: this\n        }, \"Please enter a password.\"), React.createElement(DialogContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506\n          },\n          __self: this\n        }, React.createElement(DialogContentText, {\n          id: \"alert-dialog-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507\n          },\n          __self: this\n        }, \"To check off your medication a password is required.\"), React.createElement(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Medication\",\n          name: \"medicine\",\n          value: this.state.medicine,\n          onChange: this.onChange,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Description\",\n          name: \"medDesc\",\n          value: this.state.medDesc,\n          onChange: this.onChange,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518\n          },\n          __self: this\n        }), React.createElement(Checkbox, {\n          checked: this.state.Sunday,\n          onChange: this.onCheck,\n          name: \"Sunday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532\n          },\n          __self: this\n        }, \" Sunday \")), React.createElement(DialogActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: this.handleCancel,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535\n          },\n          __self: this\n        }, \"Cancel\"), React.createElement(Button, {\n          onClick: this.handleOK,\n          color: \"primary\",\n          autoFocus: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538\n          },\n          __self: this\n        }, \"OK\"))), React.createElement(\"div\", {\n          className: \"top-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 546\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"toPage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: iconprofile,\n          alt: \"This is the home icon on the home button\",\n          onClick: this.routeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556\n          },\n          __self: this\n        }, this.renderUser(), React.createElement(\"div\", {\n          id: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558\n          },\n          __self: this\n        }, \"Hello, \", this.state.username, \" !\")), this.renderMedicine(), this.renderReward(), React.createElement(Calendar, {\n          tileClassName: tileClassName,\n          locale: \"en\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"highlight-box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575\n          },\n          __self: this\n        }, \" Highlighted days mean you completed all of your medication! \")));\n      }\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Home.js"],"names":["React","Component","Redirect","Button","Medicine","Calendar","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Checkbox","iconprofile","moment","Home","props","state","medicine","medicine_array","reward_array","image","avatar","open","medDesc","Sunday","completed","username","handleCancel","bind","handleOK","handleClickOpen","renderReward","renderMedicine","onChange","handleSubmit","getMedList","goProfile","getImage","getAvatar","routeChange","onCheck","rerenderParentCallback","IMAGES","icecream","require","baking","ball","beach","bike","book","bowling","card","carnival","chess","clothes","ferris","fire","game","gift","hamburger","hotdog","jewelry","kart","makeup","movies","paint","picnic","pizza","puzzle","shopping","sneakers","swimming","teddy","tennis","HEADS","bunny","cat","dinosaur","dog","frog","monkey","panda","penguin","raccoon","unicorn","server","setState","name","e","target","value","checked","event","history","push","today","Date","setHours","tz","format","fetch","mode","credentials","method","headers","then","res","json","data","thing","x","img_path","console","log","avatar_path","length","completed_dates","preventDefault","body","JSON","stringify","text","catch","err","map","index","thumbnail","toProfile","tileClassName","date","view","getDate","includes","renderUser"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,YAAY,EAAE,EAHH;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,MAAM,EAAC,EALI;AAMXC,MAAAA,IAAI,EAAE,KANK;AAOXC,MAAAA,OAAO,EAAE,EAPE;AAQXC,MAAAA,MAAM,EAAE,KARG;AASXC,MAAAA,SAAS,EAAE,IATA;AAUXC,MAAAA,QAAQ,EAAC;AAVE,KAAb;AAaA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AACA,UAAKE,eAAL,GAAuB,MAAKA,eAAL,CAAqBF,IAArB,uDAAvB;AAEA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,uDAApB;AACA,UAAKI,cAAL,GAAsB,MAAKA,cAAL,CAAoBJ,IAApB,uDAAtB;AAEA,UAAKK,QAAL,GAAgB,MAAKA,QAAL,CAAcL,IAAd,uDAAhB;AACA,UAAKM,YAAL,GAAoB,MAAKA,YAAL,CAAkBN,IAAlB,uDAApB;AACA,UAAKO,UAAL,GAAkB,MAAKA,UAAL,CAAgBP,IAAhB,uDAAlB;AACA,UAAKQ,SAAL,GAAiB,MAAKA,SAAL,CAAeR,IAAf,uDAAjB;AACA,UAAKS,QAAL,GAAgB,MAAKA,QAAL,CAAcT,IAAd,uDAAhB;AACA,UAAKU,SAAL,GAAiB,MAAKA,SAAL,CAAeV,IAAf,uDAAjB;AACA,UAAKW,WAAL,GAAmB,MAAKA,WAAL,CAAiBX,IAAjB,uDAAnB;AAEA,UAAKY,OAAL,GAAe,MAAKA,OAAL,CAAaZ,IAAb,uDAAf;AACA,UAAKa,sBAAL,GAA8B,MAAKA,sBAAL,CAA4Bb,IAA5B,uDAA9B;AAEA,UAAKc,MAAL,GAAc;AACZC,MAAAA,QAAQ,EAAEC,OAAO,CAAC,+BAAD,CADL;AACwC;AACpDC,MAAAA,MAAM,EAAED,OAAO,CAAC,6BAAD,CAFH;AAGZE,MAAAA,IAAI,EAAEF,OAAO,CAAC,2BAAD,CAHD;AAIZG,MAAAA,KAAK,EAAEH,OAAO,CAAC,4BAAD,CAJF;AAKZI,MAAAA,IAAI,EAAEJ,OAAO,CAAC,2BAAD,CALD;AAMZK,MAAAA,IAAI,EAAEL,OAAO,CAAC,2BAAD,CAND;AAOZM,MAAAA,OAAO,EAAEN,OAAO,CAAC,8BAAD,CAPJ;AAQZO,MAAAA,IAAI,EAAEP,OAAO,CAAC,2BAAD,CARD;AASZQ,MAAAA,QAAQ,EAAER,OAAO,CAAC,+BAAD,CATL;AAUZS,MAAAA,KAAK,EAAET,OAAO,CAAC,4BAAD,CAVF;AAUkC;AAC9CU,MAAAA,OAAO,EAAEV,OAAO,CAAC,8BAAD,CAXJ;AAYZW,MAAAA,MAAM,EAAEX,OAAO,CAAC,6BAAD,CAZH;AAaZY,MAAAA,IAAI,EAAEZ,OAAO,CAAC,2BAAD,CAbD;AAcZa,MAAAA,IAAI,EAAEb,OAAO,CAAC,2BAAD,CAdD;AAeZc,MAAAA,IAAI,EAAEd,OAAO,CAAC,2BAAD,CAfD;AAgBZe,MAAAA,SAAS,EAAEf,OAAO,CAAC,gCAAD,CAhBN;AAiBZgB,MAAAA,MAAM,EAAEhB,OAAO,CAAC,6BAAD,CAjBH;AAkBZiB,MAAAA,OAAO,EAAEjB,OAAO,CAAC,8BAAD,CAlBJ;AAmBZkB,MAAAA,IAAI,EAAElB,OAAO,CAAC,2BAAD,CAnBD;AAoBZmB,MAAAA,MAAM,EAAEnB,OAAO,CAAC,6BAAD,CApBH;AAoBoC;AAChDoB,MAAAA,MAAM,EAAEpB,OAAO,CAAC,6BAAD,CArBH;AAsBZqB,MAAAA,KAAK,EAAErB,OAAO,CAAC,4BAAD,CAtBF;AAuBZsB,MAAAA,MAAM,EAAEtB,OAAO,CAAC,6BAAD,CAvBH;AAwBZuB,MAAAA,KAAK,EAAEvB,OAAO,CAAC,4BAAD,CAxBF;AAyBZwB,MAAAA,MAAM,EAAExB,OAAO,CAAC,6BAAD,CAzBH;AA0BZyB,MAAAA,QAAQ,EAAEzB,OAAO,CAAC,+BAAD,CA1BL;AA2BZ0B,MAAAA,QAAQ,EAAE1B,OAAO,CAAC,+BAAD,CA3BL;AA4BZ2B,MAAAA,QAAQ,EAAE3B,OAAO,CAAC,+BAAD,CA5BL;AA6BZ4B,MAAAA,KAAK,EAAE5B,OAAO,CAAC,4BAAD,CA7BF;AA8BZ6B,MAAAA,MAAM,EAAE7B,OAAO,CAAC,6BAAD;AA9BH,KAAd;AAiCA,UAAK8B,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE/B,OAAO,CAAC,0BAAD,CADH;AACiC;AAC5CgC,MAAAA,GAAG,EAAEhC,OAAO,CAAC,wBAAD,CAFD;AAGXiC,MAAAA,QAAQ,EAAEjC,OAAO,CAAC,6BAAD,CAHN;AAIXkC,MAAAA,GAAG,EAAElC,OAAO,CAAC,wBAAD,CAJD;AAKXmC,MAAAA,IAAI,EAAEnC,OAAO,CAAC,yBAAD,CALF;AAMXoC,MAAAA,MAAM,EAAEpC,OAAO,CAAC,2BAAD,CANJ;AAOXqC,MAAAA,KAAK,EAAErC,OAAO,CAAC,0BAAD,CAPH;AAQXsC,MAAAA,OAAO,EAAEtC,OAAO,CAAC,4BAAD,CARL;AASXuC,MAAAA,OAAO,EAAEvC,OAAO,CAAC,4BAAD,CATL;AAUXwC,MAAAA,OAAO,EAAExC,OAAO,CAAC,4BAAD,CAVL,CAUqC;;AAVrC,KAAb;AAaA,UAAKyC,MAAL,GAAc,uBAAd;AAjFiB;AAmFlB;;;;6CAEuB;AACtB,WAAKC,QAAL,CAAc;AAACnE,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD;;;6BAGQoE,I,EAAM;AAAE;AACf,aAAO,KAAK7C,MAAL,CAAY6C,IAAZ,CAAP;AACD;;;8BAESA,I,EAAM;AAAE;AAChB,aAAO,KAAKb,KAAL,CAAWa,IAAX,CAAP;AACD;;;6BAEQC,C,EAAG;AACP,WAAKF,QAAL,qBACKE,CAAC,CAACC,MAAF,CAASF,IADd,EACqBC,CAAC,CAACC,MAAF,CAASC,KAD9B;AAGH;;;4BAEOF,C,EAAG;AACT,WAAKF,QAAL,qBACKE,CAAC,CAACC,MAAF,CAASF,IADd,EACqBC,CAAC,CAACC,MAAF,CAASE,OAD9B;AAGD;;;gCAEUC,K,EAAO;AACjB;AACA,WAAK7E,KAAL,CAAW8E,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB,EAFiB,CAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;yCAEmB,CAClB;AAEA;AAGD;;;wCAEmB;AAAA;;AAClB,UAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACAF,MAAAA,KAAK,GAAGlF,MAAM,CAACkF,KAAD,CAAN,CAAcG,EAAd,CAAiB,kBAAjB,EAAqCC,MAArC,CAA4C,YAA5C,CAAR;AAEAC,MAAAA,KAAK,CAAC,KAAKf,MAAL,GAAc,oBAAd,GAAqCU,KAAtC,EAA6C;AAChDM,QAAAA,IAAI,EAAE,MAD0C;AAEhDC,QAAAA,WAAW,EAAE,SAFmC;AAGhDC,QAAAA,MAAM,EAAE,KAHwC;AAIhDC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJuC,OAA7C,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZ,YAAIC,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIC,CAAT,IAAcF,IAAd,EAAmB;AACjBC,UAAAA,KAAK,CAACf,IAAN,CAAWc,IAAI,CAACE,CAAD,CAAJ,CAAQ7F,QAAnB;AACD;;AAED,QAAA,MAAI,CAACqE,QAAL,CAAc;AAACpE,UAAAA,cAAc,EAAE2F;AAAjB,SAAd;AACD,OAlBD;AAoBAT,MAAAA,KAAK,CAAC,KAAKf,MAAL,GAAc,YAAf,EAA6B;AAChCgB,QAAAA,IAAI,EAAE,MAD0B;AAEhCC,QAAAA,WAAW,EAAE,SAFmB;AAGhCC,QAAAA,MAAM,EAAE,KAHwB;AAIhCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJuB,OAA7B,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZ;AACA;AACA,YAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,WAAtB,EAAkC;AAC9B,UAAA,MAAI,CAACtB,QAAL,CAAc;AAACnE,YAAAA,YAAY,EAAEyF,IAAI,CAAC,CAAD,CAAnB;AAAwBxF,YAAAA,KAAK,EAAEwF,IAAI,CAAC,CAAD,CAAJ,CAAQG;AAAvC,WAAd;AACH;AAEF,OAlBD;AAoBAX,MAAAA,KAAK,CAAC,KAAKf,MAAL,GAAc,YAAf,EAA6B;AAChCgB,QAAAA,IAAI,EAAE,MAD0B;AAEhCC,QAAAA,WAAW,EAAE,SAFmB;AAGhCC,QAAAA,MAAM,EAAE,KAHwB;AAIhCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJuB,OAA7B,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZI,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,IAAzB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,IAAI,CAAClF,QAA9B;;AAEA,YAAI,OAAOkF,IAAP,IAAe,WAAnB,EAA+B;AAC3B,UAAA,MAAI,CAACtB,QAAL,CAAc;AAAC5D,YAAAA,QAAQ,EAAEkF,IAAI,CAAClF,QAAhB;AAA0BL,YAAAA,MAAM,EAAEuF,IAAI,CAACM;AAAvC,WAAd;AACH;AACF,OAlBD;AAqBAd,MAAAA,KAAK,CAAC,KAAKf,MAAL,GAAc,eAAf,EAAgC;AACnCgB,QAAAA,IAAI,EAAE,MAD6B;AAEnCC,QAAAA,WAAW,EAAE,SAFsB;AAGnCC,QAAAA,MAAM,EAAE,KAH2B;AAInCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJ0B,OAAhC,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAEA,YAAIA,IAAI,CAACO,MAAL,KAAgB,CAApB,EAAsB;AACpB;AACA;AACA;AACA;AAEA,UAAA,MAAI,CAAC7B,QAAL,CAAc;AAAC7D,YAAAA,SAAS,EAAEmF,IAAI,CAAC,CAAD,CAAJ,CAAQQ;AAApB,WAAd;AACD,SAPD,MAQK;AACH,UAAA,MAAI,CAAC9B,QAAL,CAAc;AAAC7D,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD;AACF,OAzBD,EAlEkB,CA4FhB;AAGH;;;iCAEYmE,K,EAAM;AAAA;;AACjBA,MAAAA,KAAK,CAACyB,cAAN;AACA,UAAItB,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACAF,MAAAA,KAAK,GAAGlF,MAAM,CAACkF,KAAD,CAAN,CAAcG,EAAd,CAAiB,kBAAjB,EAAqCC,MAArC,CAA4C,YAA5C,CAAR;AAEEC,MAAAA,KAAK,CAAC,KAAKf,MAAL,GAAc,cAAf,EAA+B;AAChCgB,QAAAA,IAAI,EAAE,MAD0B;AAEhCC,QAAAA,WAAW,EAAE,SAFmB;AAGhCC,QAAAA,MAAM,EAAE,MAHwB;AAIhCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B,SAJuB;AAS9Bc,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBvG,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AADF,SAAf;AATwB,OAA/B,CAAL,CAaKwF,IAbL,CAaU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACe,IAAJ,EAAJ;AAAA,OAbb,EAcKhB,IAdL,CAcU,UAAAG,IAAI,EAAI;AACZ;AACA;AAEAR,QAAAA,KAAK,CAAC,MAAI,CAACf,MAAL,GAAc,oBAAd,GAAqCU,KAAtC,EAA6C;AAChDM,UAAAA,IAAI,EAAE,MAD0C;AAEhDC,UAAAA,WAAW,EAAE,SAFmC;AAGhDC,UAAAA,MAAM,EAAE,KAHwC;AAIhDC,UAAAA,OAAO,EAAE;AACP,sBAAU,kBADH;AAEP,4BAAgB,kBAFT;AAGP,gDAAoC;AAH7B;AAJuC,SAA7C,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZ,cAAIC,KAAK,GAAG,EAAZ;;AACA,eAAK,IAAIC,CAAT,IAAcF,IAAd,EAAmB;AACjBC,YAAAA,KAAK,CAACf,IAAN,CAAWc,IAAI,CAACE,CAAD,CAAJ,CAAQ7F,QAAnB;AACD;;AAED,UAAA,MAAI,CAACqE,QAAL,CAAc;AAACpE,YAAAA,cAAc,EAAE2F;AAAjB,WAAd;AACD,SAlBD,EAJY,CAuBZ;AACA;AACA;AACA;AACA;AACA;AACD,OA3CL,EA2COa,KA3CP,CA2Ca,UAAAC,GAAG,EAAI;AACd;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,OA9CL;AA+CH,K,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iCAEY;AAAA;;AAEV,aAAQ,KAAK3G,KAAL,CAAWE,cAAX,CAA0B0G,GAA1B,CAA8B,UAAChB,IAAD,EAAOiB,KAAP,EAAiB;AACrD,eAAQ,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAGA,KAAhB;AAAuB,UAAA,GAAG,EAAEjB,IAA5B;AAAkC,UAAA,sBAAsB,EAAE,MAAI,CAACnE,sBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAAmG,OAD7F,CAAR,CAFU,CAOV;AACA;AACA;AACA;AACA;AACH;;;iCAEW;AACVuE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKjG,KAAL,CAAWK,MAA7C;;AAEA,UAAI,KAAKL,KAAL,CAAWK,MAAX,KAAsB,EAAtB,IAA4B,OAAO,KAAKL,KAAL,CAAWK,MAAlB,KAA6B,WAA7D,EAAyE;AACvE,YAAIyG,SAAS,GAAG,KAAKxF,SAAL,CAAe,KAAKtB,KAAL,CAAWK,MAA1B,CAAhB;AAEA,eAAS;AAAK,UAAA,GAAG,EAAEyG,SAAV;AAAqB,UAAA,GAAG,EAAC,WAAzB;AAAqC,UAAA,KAAK,EAAC,KAA3C;AAAiD,UAAA,MAAM,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD,OAJD,MAKI;AACF,eAAQ;AAAK,UAAA,EAAE,EAAG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAR;AACD;AACF,K,CAED;AACA;AACA;AACA;;AAEE;;;;;;qCAGgB;AACd,UAAI,KAAK9G,KAAL,CAAWE,cAAX,CAA0BiG,MAA1B,KAAqC,CAAzC,EAA2C;AACzC,eACE;AAAK,UAAA,SAAS,EAAG,aAAjB;AAA+B,UAAA,EAAE,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOI;AAAG,UAAA,EAAE,EAAC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAPJ,CADF;AAcD,OAfD,MAgBK;AACH,eACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,EAAE,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,iBAAb;AAA+B,UAAA,EAAE,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,EAMA;AAAK,UAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEG,KAAKhF,UAAL,EAFH,CANA,CADJ;AAaD;AACF;;;gCAEU;AACT,WAAKpB,KAAL,CAAW8E,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,K,CAED;AACA;;;;mCACc;AACZ;AACA;AACA;AACA;AAEA,UAAI,KAAK9E,KAAL,CAAWG,YAAX,CAAwBgG,MAAxB,KAAmC,CAAvC,EAA0C;AACxC;AAEA,eACE;AAAK,UAAA,SAAS,EAAG,iBAAjB;AAAmC,UAAA,EAAE,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOI;AAAG,UAAA,EAAE,EAAC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAPJ,CADF;AAeD,OAlBD,MAmBK;AACH;AACA;AACA,YAAIW,SAAS,GAAG,KAAKzF,QAAL,CAAc,KAAKrB,KAAL,CAAWG,YAAX,CAAwB4F,QAAtC,CAAhB,CAHG,CAIH;;AAEA,eACE;AACA;AAAK,YAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CAFF,EAOA;AAAK,YAAA,GAAG,EAAEe,SAAV;AAAqB,YAAA,GAAG,EAAC,UAAzB;AAAoC,YAAA,KAAK,EAAC,IAA1C;AAA+C,YAAA,MAAM,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAFF;AAaD,OA5CW,CA6CZ;;AACD;;;mCAEc;AACb,WAAKxC,QAAL,CAAc;AAAEhE,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;sCAEgB;AACf,WAAKgE,QAAL,CAAc;AAAEhE,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;+BAES;AACR;AACA;AACA,WAAKgE,QAAL,CAAc;AAAEhE,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;6BAGQ;AAAA;;AAEP,UAAI,KAAKN,KAAL,CAAW+G,SAAX,KAAyB,IAA7B,EAAkC;AAChC,eACE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;AAIC,UAAI,KAAK/G,KAAL,CAAWS,SAAX,KAAyB,IAAzB,IAAiC,KAAKT,KAAL,CAAWU,QAAX,KAAwB,EAA7D,EAAgE;AAC9D,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAR;AACD,OAFD,MAII;AACF,YAAMsG,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,cAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,cAAXC,IAAW,QAAXA,IAAW;AACzC,cAAIC,OAAO,GAAGtH,MAAM,CAACoH,IAAD,CAAN,CAAa9B,MAAb,CAAoB,YAApB,CAAd,CADyC,CAEzC;AACA;AACA;AACA;;AAEA,cAAI,MAAI,CAACnF,KAAL,CAAWS,SAAX,CAAqB2G,QAArB,CAA8BD,OAA9B,CAAJ,EAA2C;AACzC;AACA,mBAAO,eAAP;AACD;;AACD,iBAAO,IAAP;AACD,SAZA;;AAcF,eAAQ;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAER,oBAAC,MAAD;AACE,UAAA,IAAI,EAAE,KAAKnH,KAAL,CAAWM,IADnB;AAEE,UAAA,OAAO,EAAE,KAAKK,YAFhB;AAGE,6BAAgB,oBAHlB;AAIE,8BAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,WAAD;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,0BAAtC,CANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,EAIE,oBAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,MAAM,EAAC,OAFX;AAGI,UAAA,KAAK,EAAC,YAHV;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,QALtB;AAKgC,UAAA,QAAQ,EAAE,KAAKgB,QAL/C;AAMI,UAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAYI,oBAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,MAAM,EAAC,OAFX;AAGI,UAAA,KAAK,EAAC,aAHV;AAII,UAAA,IAAI,EAAC,SAJT;AAKI,UAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWO,OALtB;AAK+B,UAAA,QAAQ,EAAE,KAAKU,QAL9C;AAMI,UAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ,EAoBM,oBAAC,QAAD;AACE,UAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWQ,MADtB;AAEE,UAAA,QAAQ,EAAE,KAAKgB,OAFjB;AAIE,UAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApBN,EA0BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1BN,CAPF,EAmCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKb,YAAtB;AAAoC,UAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKE,QAAtB;AAAgC,UAAA,KAAK,EAAC,SAAtC;AAAgD,UAAA,SAAS,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAnCF,CAFQ,EAiDN;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAK,UAAA,GAAG,EAAEjB,WAAV;AAAuB,UAAA,GAAG,EAAC,0CAA3B;AAAsE,UAAA,OAAO,EAAI,KAAK2B,WAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADF,CAjDM,EA2DJ;AAAK,UAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK8F,UAAL,EADH,EAEE;AAAK,UAAA,EAAE,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwB,KAAKrH,KAAL,CAAWU,QAAnC,OAFF,CA3DI,EAmEL,KAAKM,cAAL,EAnEK,EAqEL,KAAKD,YAAL,EArEK,EAwEN,oBAAC,QAAD;AACA,UAAA,aAAa,EAAEiG,aADf;AAEA,UAAA,MAAM,EAAC,IAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAxEM,EA6EN;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADF,CA7EM,CAAR;AAkFD;AACF;;;;EAljBgBhI,S;;AAqjBnB,eAAec,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Medicine from './Medicine';\nimport Calendar from 'react-calendar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport iconprofile from \"./images/iconprofile2.png\";\n// import moment from \"moment\";\nimport moment from \"moment-timezone\";\n\nclass Home extends Component {\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      medicine: '',\n      medicine_array: [],\n      reward_array: [],\n      image: '',\n      avatar:'',\n      open: false,\n      medDesc: '',\n      Sunday: false,\n      completed: null,\n      username:''\n    }\n\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleOK = this.handleOK.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n\n    this.renderReward = this.renderReward.bind(this);\n    this.renderMedicine = this.renderMedicine.bind(this);\n\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getMedList = this.getMedList.bind(this);\n    this.goProfile = this.goProfile.bind(this);\n    this.getImage = this.getImage.bind(this);\n    this.getAvatar = this.getAvatar.bind(this);\n    this.routeChange = this.routeChange.bind(this);\n\n    this.onCheck = this.onCheck.bind(this);\n    this.rerenderParentCallback = this.rerenderParentCallback.bind(this);\n\n    this.IMAGES = {\n      icecream: require('./images/rewards/icecream.png'), // statically analyzed\n      baking: require('./images/rewards/baking.png'),\n      ball: require('./images/rewards/ball.png'),\n      beach: require('./images/rewards/beach.png'),\n      bike: require('./images/rewards/bike.png'),\n      book: require('./images/rewards/book.png'),\n      bowling: require('./images/rewards/bowling.png'),\n      card: require('./images/rewards/card.png'),\n      carnival: require('./images/rewards/carnival.png'),\n      chess: require('./images/rewards/chess.png'), //10\n      clothes: require('./images/rewards/clothes.png'),\n      ferris: require('./images/rewards/ferris.png'),\n      fire: require('./images/rewards/fire.png'),\n      game: require('./images/rewards/game.png'),\n      gift: require('./images/rewards/gift.png'),\n      hamburger: require('./images/rewards/hamburger.png'),\n      hotdog: require('./images/rewards/hotdog.png'),\n      jewelry: require('./images/rewards/jewelry.png'),\n      kart: require('./images/rewards/kart.png'),\n      makeup: require('./images/rewards/makeup.png'), //10\n      movies: require('./images/rewards/movies.png'),\n      paint: require('./images/rewards/paint.png'),\n      picnic: require('./images/rewards/picnic.png'),\n      pizza: require('./images/rewards/pizza.png'),\n      puzzle: require('./images/rewards/puzzle.png'),\n      shopping: require('./images/rewards/shopping.png'),\n      sneakers: require('./images/rewards/sneakers.png'),\n      swimming: require('./images/rewards/swimming.png'),\n      teddy: require('./images/rewards/teddy.png'),\n      tennis: require('./images/rewards/tennis.png')\n    }\n\n    this.HEADS = {\n      bunny: require('./images/heads/bunny.png'), // statically analyzed\n      cat: require('./images/heads/cat.png'),\n      dinosaur: require('./images/heads/dinosaur.png'),\n      dog: require('./images/heads/dog.png'),\n      frog: require('./images/heads/frog.png'),\n      monkey: require('./images/heads/monkey.png'),\n      panda: require('./images/heads/panda.png'),\n      penguin: require('./images/heads/penguin.png'),\n      raccoon: require('./images/heads/raccoon.png'),\n      unicorn: require('./images/heads/unicorn.png'), //10\n    }\n\n    this.server = \"http://localhost:5000\";\n\n  }\n\n  rerenderParentCallback(){\n    this.setState({reward_array: []});\n  }\n\n\n  getImage(name) { // dynamically invoked\n    return this.IMAGES[name];\n  }\n\n  getAvatar(name) { // dynamically invoked\n    return this.HEADS[name];\n  }\n\n  onChange(e) {\n       this.setState({\n           [e.target.name]: e.target.value\n       });\n   }\n\n   onCheck(e) {\n     this.setState({\n         [e.target.name]: e.target.checked\n     });\n   }\n\n  routeChange(event) {\n    //this.setState({toProfile: true});\n    this.props.history.push(\"/profile\");\n    // event.preventDefault()\n    // console.log(\"succesfully here!?\");\n    //\n    // fetch(\"http://localhost:5000/check\", {\n    //   mode: 'cors',\n    //   credentials: 'include',\n    //   method: 'POST',\n    //   headers: {\n    //     'Accept': 'application/json',\n    //     'Content-Type': 'application/json',\n    //     'Access-Control-Allow-Credentials': true,\n    //   }\n    // }).catch(err => {\n    //   // handle err\n    //   console.log(\"this bitch did not work\")\n    // })\n  }\n\n  componentWillMount(){\n    //console.log(\"component will mount\")\n\n    // });\n\n\n  }\n\n  componentDidMount() {\n    var today = new Date()\n    today.setHours(0, 0, 0, 0)\n    today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n\n    fetch(this.server + \"/getMedicine?date=\" + today, {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n    .then(res => res.json())\n    .then(data => {\n      var thing = []\n      for (var x in data){\n        thing.push(data[x].medicine);\n      }\n\n      this.setState({medicine_array: thing})\n    });\n\n    fetch(this.server + \"/getReward\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      //console.log(data[0])\n      //console.log(data[0])\n      if (typeof data[0] != 'undefined'){\n          this.setState({reward_array: data[0], image: data[0].img_path })\n      }\n\n    });\n\n    fetch(this.server + \"/getAvatar\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(\"USER DATA\", data)\n      console.log(\"Username?\", data.username)\n\n      if (typeof data != 'undefined'){\n          this.setState({username: data.username, avatar: data.avatar_path});\n      }\n    });\n\n\n    fetch(this.server + \"/getCompleted\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n\n      if (data.length !== 0){\n        // var completed_dates = []\n        // for (var i in data){\n        //   completed_dates.push(data[i].completed_dates);\n        // }\n\n        this.setState({completed: data[0].completed_dates })\n      }\n      else {\n        this.setState({completed: []})\n      }\n    });\n      // console.log(completed_dates)\n\n\n  }\n\n  handleSubmit(event){\n    event.preventDefault()\n    var today = new Date()\n    today.setHours(0, 0, 0, 0)\n    today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n\n      fetch(this.server + \"/addMedicine\", {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Credentials': true,\n          },\n            body: JSON.stringify({\n              medicine: this.state.medicine\n            })\n          })\n          .then(res => res.text())\n          .then(data => {\n            // console.log(\"hiiii\")\n            // this.setState({form: false})\n\n            fetch(this.server + \"/getMedicine?date=\" + today, {\n              mode: 'cors',\n              credentials: 'include',\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true,\n              },\n            })\n            .then(res => res.json())\n            .then(data => {\n              var thing = []\n              for (var x in data){\n                thing.push(data[x].medicine);\n              }\n\n              this.setState({medicine_array: thing})\n            });\n            // if (data.data.code === 200){\n            //\n            // }\n            // console.log(data);\n            //return res;\n            // process returned data\n          }).catch(err => {\n            // handle err\n            console.log(err)\n          })\n  }\n\n\n  // showForm(){\n  //   if (this.state.form === true ){\n  //     return (\n  //       <div className = \"display-form\">\n  //         <form onSubmit={this.handleSubmit}>\n  //\n  //         <input type=\"text\" id =\"medicine-add\" name=\"medicine\" onChange={this.onChange} value={this.state.medicine}/>\n  //\n  //         <input type=\"submit\" value=\"Add\" id =\"submitButton-home\" onClick={this.removeForm}/>\n  //         </form>\n  //       </div>\n  //     );\n  //   }\n  // }\n  //\n  // setForm(){\n  //   this.setState({form: true});\n  // }\n\n  getMedList(){\n\n    return (this.state.medicine_array.map((data, index) => {\n      return (<Medicine key= {index} med={data} rerenderParentCallback={this.rerenderParentCallback}/>) })\n    );\n\n\n    // return (this.state.medicine_array.map( ( med ) => {\n    //   console.log(med)\n    //     return (<Medicine medicine={med} />) ;\n    //   });\n    // )\n}\n\nrenderUser(){\n  console.log(\"THIS IS THE AVATAR\", this.state.avatar)\n\n  if (this.state.avatar !== \"\" && typeof this.state.avatar !== 'undefined'){\n    var thumbnail = this.getAvatar(this.state.avatar);\n\n    return ( <img src={thumbnail} alt=\"thumbnail\" width=\"160\" height=\"160\"/> );\n  }\n  else{\n    return (<div id = \"circle\"> </div>);\n  }\n}\n\n//\n// <Button id = \"editbutton\" variant=\"outlined\" onClick ={this.handleClickOpen}>\n//   + Add medications\n// </Button>\n\n  /* Render the medicines if they exist. AKA, get request here... otherwise,\n   * just render the edit button\n  */\n  renderMedicine(){\n    if (this.state.medicine_array.length === 0){\n      return (\n        <div className = \"deargod-med\" id=\"medicationNone\">\n          {/*<div className=\"deargod-top\" id=\"medicationNoneTop\">*/}\n            {/*<p className=\"deargodTopTitle\" id=\"med\">*/}\n              {/*Today's Medication*/}\n            {/*</p>*/}\n          {/*</div>*/}\n          {/*<div className=\"deargod-bottom\">*/}\n            <p id=\"notif\"> You don't have any medications for today.\n              {/*<a href=\"/profile\"><span className=\"signup-here\">Add one here!</span></a> */}\n            </p>\n          {/*</div>*/}\n        </div>\n      );\n    }\n    else {\n      return (\n          <div className=\"med-container\">\n            <div className=\"deargod-top\" id=\"medicationNoneTop\">\n              <p className=\"deargodTopTitle\" id=\"med\">\n                Today's Medication\n              </p>\n            </div>\n          <div className = \"deargod-med\">\n            {/*add the deargod-top*/}\n            {this.getMedList()}\n          </div>\n          </div>\n      );\n    }\n  }\n\n  goProfile(){\n    this.props.history.push(\"/reward\");\n  }\n\n  // oh fuck bugs\n  // cannot render img and also wont render at beginning\n  renderReward(){\n    // console.log( this.state.reward_array.desc )\n    // console.log( this.state.reward_array.length )\n    // console.log(this.state.reward_array.desc == undefined)\n    //|| typeof this.state.reward_array.img_path === 'undefined'\n\n    if (this.state.reward_array.length === 0 ){\n      //console.log(\"hi\")\n\n      return (\n        <div className = \"deargod-rewards\" id=\"rewardsNone\">\n          {/*<div className=\"deargod-top\" id=\"rewardsNoneTop\">*/}\n            {/*<p className=\"rewardsNoneTopTitle\">*/}\n              {/*My Rewards*/}\n            {/*</p>*/}\n          {/*</div>*/}\n          {/*<div className=\"deargod-bottom\" id=\"rewardsNoneBottom\">*/}\n            <p id=\"notif\"> You don't have any ongoing rewards.\n              {/*<a href=\"/profile\"><span className=\"signup-here\">Create one here! </span></a>*/}\n            </p>\n          {/*</div>*/}\n          {/*CATH: commented out rewards button*/}\n        </div>\n      );\n    }\n    else {\n      //console.log( this.state.reward_array.img_path);\n      // this.getImage(this.state.reward_array.img_path)\n      var thumbnail = this.getImage(this.state.reward_array.img_path);\n      // //<Image source={{ uri: this.state.reward_array.img_path }} />\n\n      return (\n        //  CATH: changed this div from rewardbox to deargod-rewards\n        <div className = \"deargod-rewards\">\n          {/*add the deargod-top*/}\n          <div className=\"deargod-top\">\n            <p className=\"deargodTopTitle\">\n              My Current Reward\n            </p>\n          </div>\n        <img src={thumbnail} alt=\"icecweam\" width=\"40\" height=\"40\"/>\n        </div>\n      );\n\n    }\n    //}\n  }\n\n  handleCancel() {\n    this.setState({ open: false });\n  };\n\n  handleClickOpen(){\n    this.setState({ open: true });\n  };\n\n  handleOK(){\n    //this.setState({ open: true });\n    // do stuff\n    this.setState({ open: false });\n  };\n\n\n  render() {\n\n    if (this.state.toProfile === true){\n      return (\n        <Redirect to=\"/profile\" />\n      );\n    }\n\n\n\n      if (this.state.completed === null || this.state.username === \"\"){\n        return (<div> Loading... </div>);\n      }\n\n      else{\n        const tileClassName = ({ date, view }) => {\n         let getDate = moment(date).format(\"YYYY/MM/DD\");\n         // console.log(\"The days I have are\", this.state.completed)\n         // console.log(\"Today, is the day of \", getDate)\n         // console.log(this.state.completed.includes(getDate))\n         // console.log(this.state.completed[0] )\n\n         if (this.state.completed.includes(getDate)){\n           // console.log(\"here\")\n           return \"highlight-day\";\n         }\n         return null;\n       }\n\n      return (<div className = \"containerHome\">\n\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Please enter a password.\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            To check off your medication a password is required.\n          </DialogContentText>\n          <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Medication\"\n              name=\"medicine\"\n              value={this.state.medicine} onChange={this.onChange}\n              fullWidth\n            />\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"Description\"\n                name=\"medDesc\"\n                value={this.state.medDesc} onChange={this.onChange}\n                fullWidth\n              />\n              <Checkbox\n                checked={this.state.Sunday}\n                onChange={this.onCheck}\n\n                name=\"Sunday\"\n              />\n              <p> Sunday </p>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleOK} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n\n        <div className = \"top-bar\">\n          <div className = \"toPage\">\n\n              <img src={iconprofile} alt=\"This is the home icon on the home button\" onClick = {this.routeChange}></img>\n\n          </div>\n        </div>\n\n\n\n          <div className = \"user\">\n            {this.renderUser()}\n            <div id =\"name\">Hello, {this.state.username} !</div>\n            {/*CATH: make user name not clickable*/}\n            {/*<div id = \"name\" onClick = {this.routeChange}> Hello, Sam!  </div>*/}\n          </div>\n\n\n        {this.renderMedicine()}\n\n        {this.renderReward()}\n\n\n        <Calendar\n        tileClassName={tileClassName}\n        locale=\"en\"\n        />\n\n        <div className=\"highlight-box\">\n          <p> Highlighted days mean you completed all of your medication! </p>\n        </div>\n        </div>\n        );\n    }\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}