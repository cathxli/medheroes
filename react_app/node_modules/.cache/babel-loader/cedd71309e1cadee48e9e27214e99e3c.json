{"ast":null,"code":"import _defineProperty from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Home.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // foreign imports\n\nimport Button from '@material-ui/core/Button';\nimport Medicine from './Medicine';\nimport Calendar from 'react-calendar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport moment from \"moment-timezone\";\nimport { BarLoader } from 'react-spinners'; // imgs\n\nimport footerHome from \"./images/iconhome.png\";\nimport footerProfile from \"./images/smile.png\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      medicine: '',\n      medicine_array: [],\n      reward_array: [],\n      image: '',\n      avatar: '',\n      open: false,\n      medDesc: '',\n      Sunday: false,\n      completed: null,\n      username: '',\n      medicine_render: false,\n      scroll: '',\n      navColor: \"\",\n      showReward: false\n      /* dialog methods */\n\n    };\n    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOK = _this.handleOK.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOKReward = _this.handleOKReward.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancelReward = _this.handleCancelReward.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* render and rerendering methods */\n\n    _this.renderReward = _this.renderReward.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderMedicine = _this.renderMedicine.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMedList = _this.getMedList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.rerenderParentCallbackReward = _this.rerenderParentCallbackReward.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.rerenderParentCallbackMedicine = _this.rerenderParentCallbackMedicine.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.rerenderParentCallbackDates = _this.rerenderParentCallbackDates.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* state changing methods */\n\n    _this.onCheck = _this.onCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* image accessor methods*/\n\n    _this.getImage = _this.getImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAvatar = _this.getAvatar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* Scrolling, submission, and rerouting */\n\n    _this.handleScroll = _this.handleScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goToProfile = _this.goToProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.REWARDS = {\n      icecream: require('./images/rewards/icecream.png'),\n      baking: require('./images/rewards/baking.png'),\n      ball: require('./images/rewards/ball.png'),\n      beach: require('./images/rewards/beach.png'),\n      bike: require('./images/rewards/bike.png'),\n      book: require('./images/rewards/book.png'),\n      bowling: require('./images/rewards/bowling.png'),\n      card: require('./images/rewards/card.png'),\n      carnival: require('./images/rewards/carnival.png'),\n      chess: require('./images/rewards/chess.png'),\n      clothes: require('./images/rewards/clothes.png'),\n      ferris: require('./images/rewards/ferris.png'),\n      fire: require('./images/rewards/fire.png'),\n      game: require('./images/rewards/game.png'),\n      gift: require('./images/rewards/gift.png'),\n      hamburger: require('./images/rewards/hamburger.png'),\n      hotdog: require('./images/rewards/hotdog.png'),\n      jewelry: require('./images/rewards/jewelry.png'),\n      kart: require('./images/rewards/kart.png'),\n      makeup: require('./images/rewards/makeup.png'),\n      movies: require('./images/rewards/movies.png'),\n      paint: require('./images/rewards/paint.png'),\n      picnic: require('./images/rewards/picnic.png'),\n      pizza: require('./images/rewards/pizza.png'),\n      puzzle: require('./images/rewards/puzzle.png'),\n      shopping: require('./images/rewards/shopping.png'),\n      sneakers: require('./images/rewards/sneakers.png'),\n      swimming: require('./images/rewards/swimming.png'),\n      teddy: require('./images/rewards/teddy.png'),\n      tennis: require('./images/rewards/tennis.png')\n    };\n    _this.HEADS = {\n      bunny: require('./images/heads/bunny.png'),\n      cat: require('./images/heads/cat.png'),\n      dinosaur: require('./images/heads/dinosaur.png'),\n      dog: require('./images/heads/dog.png'),\n      frog: require('./images/heads/frog.png'),\n      monkey: require('./images/heads/monkey.png'),\n      panda: require('./images/heads/panda.png'),\n      penguin: require('./images/heads/penguin.png'),\n      raccoon: require('./images/heads/raccoon.png'),\n      unicorn: require('./images/heads/unicorn.png')\n    };\n    _this.server = \"http://localhost:5000\";\n    return _this;\n  }\n  /* COMPONENT DID MOUNT\n   *\n   * Gets the user's medication, reward, avatar, and completed days.\n   */\n\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n      today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n      this.setState({\n        navColor: \"#1871ff\"\n      });\n      fetch(this.server + \"/getMedicine?date=\" + today, {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var thing = [];\n\n        for (var x in data) {\n          thing.push(data[x].medicine);\n        }\n\n        _this2.setState({\n          medicine_array: thing\n        });\n      });\n      fetch(this.server + \"/getReward\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (typeof data[0] != 'undefined') {\n          _this2.setState({\n            reward_array: data[0],\n            image: data[0].img_path\n          });\n        }\n      });\n      fetch(this.server + \"/getAvatar\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (typeof data != 'undefined' && data !== null) {\n          _this2.setState({\n            username: data.username,\n            avatar: data.avatar_path\n          });\n        }\n      });\n      fetch(this.server + \"/getCompleted\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.length !== 0) {\n          _this2.setState({\n            completed: data[0].completed_dates\n          });\n        } else {\n          _this2.setState({\n            completed: []\n          });\n        }\n      });\n    }\n    /* STATE CHANGING METHODS */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onCheck\",\n    value: function onCheck(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.checked));\n    }\n    /* IMAGE ACCESSORS */\n\n    /* Accessor for the reward images. */\n\n  }, {\n    key: \"getImage\",\n    value: function getImage(name) {\n      return this.REWARDS[name];\n    }\n    /* Accessor for the avatar images. */\n\n  }, {\n    key: \"getAvatar\",\n    value: function getAvatar(name) {\n      return this.HEADS[name];\n    }\n    /* DIALOG HANDLERS */\n\n  }, {\n    key: \"handleCancelReward\",\n    value: function handleCancelReward() {\n      this.setState({\n        showReward: false\n      });\n    }\n  }, {\n    key: \"handleOKReward\",\n    value: function handleOKReward() {\n      this.setState({\n        showReward: false,\n        reward_array: []\n      });\n    }\n  }, {\n    key: \"handleCancel\",\n    value: function handleCancel() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"handleClickOpen\",\n    value: function handleClickOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleOK\",\n    value: function handleOK() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"rerenderParentCallbackReward\",\n\n    /* RERENDER METHODS */\n\n    /* Show reward dialog. */\n    value: function rerenderParentCallbackReward() {\n      this.setState({\n        showReward: true\n      });\n    }\n    /* IUpdate calendar days. */\n\n  }, {\n    key: \"rerenderParentCallbackDates\",\n    value: function rerenderParentCallbackDates() {\n      var _this3 = this;\n\n      fetch(this.server + \"/getCompleted\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.length !== 0) {\n          _this3.setState({\n            completed: data[0].completed_dates\n          });\n        } else {\n          _this3.setState({\n            completed: []\n          });\n        }\n      });\n    }\n    /* Update medicine rerender. */\n\n  }, {\n    key: \"rerenderParentCallbackMedicine\",\n    value: function rerenderParentCallbackMedicine() {\n      this.setState({\n        medicine_render: true\n      });\n    }\n    /* ROUTING METHOD */\n\n  }, {\n    key: \"goToProfile\",\n    value: function goToProfile(event) {\n      // go /profile\n      this.props.history.push(\"/profile\");\n    }\n    /* Adds medication for a user. Updates medicine list after added. */\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this4 = this;\n\n      event.preventDefault();\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n      today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n      fetch(this.server + \"/addMedicine\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        },\n        body: JSON.stringify({\n          medicine: this.state.medicine\n        })\n      }).then(function (res) {\n        return res.text();\n      }).then(function (data) {\n        fetch(_this4.server + \"/getMedicine?date=\" + today, {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Credentials': true\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var thing = [];\n\n          for (var x in data) {\n            thing.push(data[x].medicine);\n          }\n\n          _this4.setState({\n            medicine_array: thing\n          });\n        });\n      }).catch(function (err) {\n        // handle err\n        console.log(err);\n      });\n    }\n    /* METHODS USED IN RENDERING */\n\n    /*\n     * Renders user conditionally.\n     * If no avatar, renders an empty circle.\n     * Else, shows their avatar.\n     */\n\n  }, {\n    key: \"renderUser\",\n    value: function renderUser() {\n      if (this.state.avatar !== \"\" && typeof this.state.avatar !== 'undefined') {\n        var thumbnail = this.getAvatar(this.state.avatar);\n        return React.createElement(\"img\", {\n          src: thumbnail,\n          alt: \"thumbnail\",\n          width: \"120\",\n          height: \"120\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          id: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, \" \");\n      }\n    } // helper method to render medications\n\n  }, {\n    key: \"getMedList\",\n    value: function getMedList() {\n      var _this5 = this;\n\n      return this.state.medicine_array.map(function (data, index) {\n        return React.createElement(Medicine, {\n          key: index,\n          med: data,\n          rerenderParentCallbackReward: _this5.rerenderParentCallbackReward,\n          rerenderParentCallbackMedicine: _this5.rerenderParentCallbackMedicine,\n          rerenderParentCallbackDates: _this5.rerenderParentCallbackDates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        });\n      });\n    }\n    /*\n     * Renders medicine conditionally.\n     * If no medicine listed for today, renders message.\n     * Else, shows the medications that they must take today.\n     */\n\n  }, {\n    key: \"renderMedicine\",\n    value: function renderMedicine() {\n      if (this.state.medicine_array.length === 0) {\n        return React.createElement(\"div\", {\n          className: \"med-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          id: \"medicationNoneTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          id: \"med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, \"My Medication\")), React.createElement(\"p\", {\n          id: \"notif\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, \" You don't have any medications for today.  \")));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"med-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          id: \"medicationNoneTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          id: \"med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, \"My Medication\")), React.createElement(\"div\", {\n          className: \"med-displayed-innner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }, this.getMedList())));\n      }\n    }\n    /*\n     * Renders reward conditionally.\n     * If no reward associated with the user, renders a message.\n     * Else, shows the reward associated with the user.\n     */\n\n  }, {\n    key: \"renderReward\",\n    value: function renderReward() {\n      if (this.state.reward_array.length === 0) {\n        return React.createElement(\"div\", {\n          className: \"rewards-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-rewards\",\n          id: \"rewardsNone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          id: \"medicationNoneTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          id: \"med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425\n          },\n          __self: this\n        }, \"Current Reward\")), React.createElement(\"p\", {\n          id: \"notif\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          },\n          __self: this\n        }, \" You don't have any ongoing rewards.\")));\n      } else {\n        var thumbnail = this.getImage(this.state.reward_array.img_path);\n        return React.createElement(\"div\", {\n          className: \"rewards-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-rewards\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          },\n          __self: this\n        }, \"My Reward\")), React.createElement(\"div\", {\n          className: \"rewards-home-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: thumbnail,\n          alt: \"thumbnail of reward\",\n          width: \"60\",\n          height: \"60\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"rewards-home-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450\n          },\n          __self: this\n        }, \"You have \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450\n          },\n          __self: this\n        }, this.state.reward_array.goalCount - this.state.reward_array.actualCount, \" \"), \" day(s) left until you reach your reward for \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }, \" \", this.state.reward_array.img_path), \"!\")))));\n      }\n    }\n    /* Method for scrolling. */\n\n  }, {\n    key: \"handleScroll\",\n    value: function handleScroll() {\n      this.setState({\n        scroll: \"none\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      // highlights completed dates if they exist.\n      if (this.state.completed === null || this.state.username === \"\") {\n        return React.createElement(\"div\", {\n          className: \"loading-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        }, React.createElement(BarLoader, {\n          sizeUnit: \"px\",\n          width: 200,\n          height: 8,\n          size: 500,\n          color: '#01c13b',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"loading-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }, \"Loading... \"));\n      } else {\n        var tileClassName = function tileClassName(_ref) {\n          var date = _ref.date,\n              view = _ref.view;\n          var getDate = moment(date).format(\"YYYY/MM/DD\");\n\n          if (_this6.state.completed.includes(getDate)) {\n            return \"highlight-day\";\n          }\n\n          return null;\n        };\n\n        return React.createElement(\"div\", {\n          className: \"containerHome\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487\n          },\n          __self: this\n        }, React.createElement(Dialog, {\n          open: this.state.showReward,\n          onClose: this.handleCancelReward,\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488\n          },\n          __self: this\n        }, React.createElement(DialogTitle, {\n          id: \"alert-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"rewards-popup-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }, \"Congrats!\")), React.createElement(DialogContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"rewards-popup-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"rewards-popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496\n          },\n          __self: this\n        }, \"You've reached your goal and can now receive your reward of\", React.createElement(\"span\", {\n          className: \"bold-this\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497\n          },\n          __self: this\n        }, \" \", this.state.reward_array.img_path), \"!\"), React.createElement(\"div\", {\n          className: \"rewards-popup-img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: this.getImage(this.state.reward_array.img_path),\n          alt: \"thumbnail of reward\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        })))), React.createElement(DialogActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: this.handleOKReward,\n          color: \"primary\",\n          autoFocus: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, \"OK\"))), React.createElement(Dialog, {\n          open: this.state.open,\n          onClose: this.handleCancel,\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509\n          },\n          __self: this\n        }, React.createElement(DialogTitle, {\n          id: \"alert-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515\n          },\n          __self: this\n        }, \"Please enter a password.\"), React.createElement(DialogContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516\n          },\n          __self: this\n        }, React.createElement(DialogContentText, {\n          id: \"alert-dialog-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517\n          },\n          __self: this\n        }, \"To check off your medication a password is required.\"), React.createElement(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Medication\",\n          name: \"medicine\",\n          value: this.state.medicine,\n          onChange: this.onChange,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Description\",\n          name: \"medDesc\",\n          value: this.state.medDesc,\n          onChange: this.onChange,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528\n          },\n          __self: this\n        }), React.createElement(Checkbox, {\n          checked: this.state.Sunday,\n          onChange: this.onCheck,\n          name: \"Sunday\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542\n          },\n          __self: this\n        }, \" Sunday \")), React.createElement(DialogActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: this.handleCancel,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 545\n          },\n          __self: this\n        }, \"Cancel\"), React.createElement(Button, {\n          onClick: this.handleOK,\n          color: \"primary\",\n          autoFocus: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548\n          },\n          __self: this\n        }, \"OK\"))), React.createElement(\"div\", {\n          className: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554\n          },\n          __self: this\n        }, this.renderUser(), React.createElement(\"div\", {\n          id: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556\n          },\n          __self: this\n        }, \"Hello, \", this.state.username, \"!\")), this.renderMedicine(), this.renderReward(), React.createElement(\"div\", {\n          className: \"calendar-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"deargod-top\",\n          id: \"medicationNoneTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 565\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"deargodTopTitle\",\n          id: \"med\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566\n          },\n          __self: this\n        }, \"My History\"))), React.createElement(Calendar, {\n          tileClassName: tileClassName,\n          locale: \"en\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"footer\",\n          style: {\n            boxShadow: this.state.scroll\n          },\n          onScroll: this.handleScroll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"toHome\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: footerHome,\n          alt: \"footer-home\",\n          style: {\n            backgroundColor: this.state.navColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          style: {\n            color: this.state.navColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580\n          },\n          __self: this\n        }, \"home\")), React.createElement(\"div\", {\n          className: \"toProfile\",\n          onClick: this.goToProfile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: footerProfile,\n          alt: \"footer-profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584\n          },\n          __self: this\n        }, \"me\"))));\n      }\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Home.js"],"names":["React","Component","Button","Medicine","Calendar","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Checkbox","moment","BarLoader","footerHome","footerProfile","Home","props","state","medicine","medicine_array","reward_array","image","avatar","open","medDesc","Sunday","completed","username","medicine_render","scroll","navColor","showReward","handleCancel","bind","handleOK","handleClickOpen","handleOKReward","handleCancelReward","renderReward","renderMedicine","getMedList","rerenderParentCallbackReward","rerenderParentCallbackMedicine","rerenderParentCallbackDates","onCheck","onChange","getImage","getAvatar","handleScroll","handleSubmit","goToProfile","REWARDS","icecream","require","baking","ball","beach","bike","book","bowling","card","carnival","chess","clothes","ferris","fire","game","gift","hamburger","hotdog","jewelry","kart","makeup","movies","paint","picnic","pizza","puzzle","shopping","sneakers","swimming","teddy","tennis","HEADS","bunny","cat","dinosaur","dog","frog","monkey","panda","penguin","raccoon","unicorn","server","today","Date","setHours","tz","format","setState","fetch","mode","credentials","method","headers","then","res","json","data","thing","x","push","img_path","avatar_path","length","completed_dates","e","target","name","value","checked","event","history","preventDefault","body","JSON","stringify","text","catch","err","console","log","thumbnail","map","index","goalCount","actualCount","tileClassName","date","view","getDate","includes","renderUser","boxShadow","backgroundColor","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,YAAY,EAAE,EAHH;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,MAAM,EAAC,EALI;AAMXC,MAAAA,IAAI,EAAE,KANK;AAOXC,MAAAA,OAAO,EAAE,EAPE;AAQXC,MAAAA,MAAM,EAAE,KARG;AASXC,MAAAA,SAAS,EAAE,IATA;AAUXC,MAAAA,QAAQ,EAAC,EAVE;AAWXC,MAAAA,eAAe,EAAE,KAXN;AAYXC,MAAAA,MAAM,EAAE,EAZG;AAaXC,MAAAA,QAAQ,EAAE,EAbC;AAcXC,MAAAA,UAAU,EAAE;AAGd;;AAjBa,KAAb;AAkBA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AACA,UAAKE,eAAL,GAAuB,MAAKA,eAAL,CAAqBF,IAArB,uDAAvB;AACA,UAAKG,cAAL,GAAsB,MAAKA,cAAL,CAAoBH,IAApB,uDAAtB;AACA,UAAKI,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBJ,IAAxB,uDAA1B;AAEA;;AACA,UAAKK,YAAL,GAAoB,MAAKA,YAAL,CAAkBL,IAAlB,uDAApB;AACA,UAAKM,cAAL,GAAsB,MAAKA,cAAL,CAAoBN,IAApB,uDAAtB;AACA,UAAKO,UAAL,GAAkB,MAAKA,UAAL,CAAgBP,IAAhB,uDAAlB;AACA,UAAKQ,4BAAL,GAAoC,MAAKA,4BAAL,CAAkCR,IAAlC,uDAApC;AACA,UAAKS,8BAAL,GAAsC,MAAKA,8BAAL,CAAoCT,IAApC,uDAAtC;AACA,UAAKU,2BAAL,GAAmC,MAAKA,2BAAL,CAAiCV,IAAjC,uDAAnC;AAEA;;AACA,UAAKW,OAAL,GAAe,MAAKA,OAAL,CAAaX,IAAb,uDAAf;AACA,UAAKY,QAAL,GAAgB,MAAKA,QAAL,CAAcZ,IAAd,uDAAhB;AAGA;;AACA,UAAKa,QAAL,GAAgB,MAAKA,QAAL,CAAcb,IAAd,uDAAhB;AACA,UAAKc,SAAL,GAAiB,MAAKA,SAAL,CAAed,IAAf,uDAAjB;AAEA;;AACA,UAAKe,YAAL,GAAoB,MAAKA,YAAL,CAAkBf,IAAlB,uDAApB;AACA,UAAKgB,YAAL,GAAoB,MAAKA,YAAL,CAAkBhB,IAAlB,uDAApB;AACA,UAAKiB,WAAL,GAAmB,MAAKA,WAAL,CAAiBjB,IAAjB,uDAAnB;AAEA,UAAKkB,OAAL,GAAe;AACbC,MAAAA,QAAQ,EAAEC,OAAO,CAAC,+BAAD,CADJ;AAEbC,MAAAA,MAAM,EAAED,OAAO,CAAC,6BAAD,CAFF;AAGbE,MAAAA,IAAI,EAAEF,OAAO,CAAC,2BAAD,CAHA;AAIbG,MAAAA,KAAK,EAAEH,OAAO,CAAC,4BAAD,CAJD;AAKbI,MAAAA,IAAI,EAAEJ,OAAO,CAAC,2BAAD,CALA;AAMbK,MAAAA,IAAI,EAAEL,OAAO,CAAC,2BAAD,CANA;AAObM,MAAAA,OAAO,EAAEN,OAAO,CAAC,8BAAD,CAPH;AAQbO,MAAAA,IAAI,EAAEP,OAAO,CAAC,2BAAD,CARA;AASbQ,MAAAA,QAAQ,EAAER,OAAO,CAAC,+BAAD,CATJ;AAUbS,MAAAA,KAAK,EAAET,OAAO,CAAC,4BAAD,CAVD;AAWbU,MAAAA,OAAO,EAAEV,OAAO,CAAC,8BAAD,CAXH;AAYbW,MAAAA,MAAM,EAAEX,OAAO,CAAC,6BAAD,CAZF;AAabY,MAAAA,IAAI,EAAEZ,OAAO,CAAC,2BAAD,CAbA;AAcba,MAAAA,IAAI,EAAEb,OAAO,CAAC,2BAAD,CAdA;AAebc,MAAAA,IAAI,EAAEd,OAAO,CAAC,2BAAD,CAfA;AAgBbe,MAAAA,SAAS,EAAEf,OAAO,CAAC,gCAAD,CAhBL;AAiBbgB,MAAAA,MAAM,EAAEhB,OAAO,CAAC,6BAAD,CAjBF;AAkBbiB,MAAAA,OAAO,EAAEjB,OAAO,CAAC,8BAAD,CAlBH;AAmBbkB,MAAAA,IAAI,EAAElB,OAAO,CAAC,2BAAD,CAnBA;AAoBbmB,MAAAA,MAAM,EAAEnB,OAAO,CAAC,6BAAD,CApBF;AAqBboB,MAAAA,MAAM,EAAEpB,OAAO,CAAC,6BAAD,CArBF;AAsBbqB,MAAAA,KAAK,EAAErB,OAAO,CAAC,4BAAD,CAtBD;AAuBbsB,MAAAA,MAAM,EAAEtB,OAAO,CAAC,6BAAD,CAvBF;AAwBbuB,MAAAA,KAAK,EAAEvB,OAAO,CAAC,4BAAD,CAxBD;AAyBbwB,MAAAA,MAAM,EAAExB,OAAO,CAAC,6BAAD,CAzBF;AA0BbyB,MAAAA,QAAQ,EAAEzB,OAAO,CAAC,+BAAD,CA1BJ;AA2Bb0B,MAAAA,QAAQ,EAAE1B,OAAO,CAAC,+BAAD,CA3BJ;AA4Bb2B,MAAAA,QAAQ,EAAE3B,OAAO,CAAC,+BAAD,CA5BJ;AA6Bb4B,MAAAA,KAAK,EAAE5B,OAAO,CAAC,4BAAD,CA7BD;AA8Bb6B,MAAAA,MAAM,EAAE7B,OAAO,CAAC,6BAAD;AA9BF,KAAf;AAiCA,UAAK8B,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE/B,OAAO,CAAC,0BAAD,CADH;AAEXgC,MAAAA,GAAG,EAAEhC,OAAO,CAAC,wBAAD,CAFD;AAGXiC,MAAAA,QAAQ,EAAEjC,OAAO,CAAC,6BAAD,CAHN;AAIXkC,MAAAA,GAAG,EAAElC,OAAO,CAAC,wBAAD,CAJD;AAKXmC,MAAAA,IAAI,EAAEnC,OAAO,CAAC,yBAAD,CALF;AAMXoC,MAAAA,MAAM,EAAEpC,OAAO,CAAC,2BAAD,CANJ;AAOXqC,MAAAA,KAAK,EAAErC,OAAO,CAAC,0BAAD,CAPH;AAQXsC,MAAAA,OAAO,EAAEtC,OAAO,CAAC,4BAAD,CARL;AASXuC,MAAAA,OAAO,EAAEvC,OAAO,CAAC,4BAAD,CATL;AAUXwC,MAAAA,OAAO,EAAExC,OAAO,CAAC,4BAAD;AAVL,KAAb;AAaA,UAAKyC,MAAL,GAAc,uBAAd;AAhGiB;AAiGlB;AAED;;;;;;;;wCAIoB;AAAA;;AAClB,UAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACAF,MAAAA,KAAK,GAAGpF,MAAM,CAACoF,KAAD,CAAN,CAAcG,EAAd,CAAiB,kBAAjB,EAAqCC,MAArC,CAA4C,YAA5C,CAAR;AACA,WAAKC,QAAL,CAAc;AAACtE,QAAAA,QAAQ,EAAE;AAAX,OAAd;AAEAuE,MAAAA,KAAK,CAAC,KAAKP,MAAL,GAAc,oBAAd,GAAqCC,KAAtC,EAA6C;AAChDO,QAAAA,IAAI,EAAE,MAD0C;AAEhDC,QAAAA,WAAW,EAAE,SAFmC;AAGhDC,QAAAA,MAAM,EAAE,KAHwC;AAIhDC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJuC,OAA7C,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZ,YAAIC,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIC,CAAT,IAAcF,IAAd,EAAmB;AACjBC,UAAAA,KAAK,CAACE,IAAN,CAAWH,IAAI,CAACE,CAAD,CAAJ,CAAQ7F,QAAnB;AACD;;AAED,QAAA,MAAI,CAACkF,QAAL,CAAc;AAACjF,UAAAA,cAAc,EAAE2F;AAAjB,SAAd;AACD,OAlBD;AAoBAT,MAAAA,KAAK,CAAC,KAAKP,MAAL,GAAc,YAAf,EAA6B;AAChCQ,QAAAA,IAAI,EAAE,MAD0B;AAEhCC,QAAAA,WAAW,EAAE,SAFmB;AAGhCC,QAAAA,MAAM,EAAE,KAHwB;AAIhCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJuB,OAA7B,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZ,YAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,WAAtB,EAAkC;AAC9B,UAAA,MAAI,CAACT,QAAL,CAAc;AAAChF,YAAAA,YAAY,EAAEyF,IAAI,CAAC,CAAD,CAAnB;AAAwBxF,YAAAA,KAAK,EAAEwF,IAAI,CAAC,CAAD,CAAJ,CAAQI;AAAvC,WAAd;AACH;AACF,OAfD;AAiBAZ,MAAAA,KAAK,CAAC,KAAKP,MAAL,GAAc,YAAf,EAA6B;AAChCQ,QAAAA,IAAI,EAAE,MAD0B;AAEhCC,QAAAA,WAAW,EAAE,SAFmB;AAGhCC,QAAAA,MAAM,EAAE,KAHwB;AAIhCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJuB,OAA7B,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AAEZ,YAAI,OAAOA,IAAP,IAAe,WAAf,IAA8BA,IAAI,KAAK,IAA3C,EAAgD;AAC5C,UAAA,MAAI,CAACT,QAAL,CAAc;AAACzE,YAAAA,QAAQ,EAAEkF,IAAI,CAAClF,QAAhB;AAA0BL,YAAAA,MAAM,EAAEuF,IAAI,CAACK;AAAvC,WAAd;AACH;AACF,OAhBD;AAmBAb,MAAAA,KAAK,CAAC,KAAKP,MAAL,GAAc,eAAf,EAAgC;AACnCQ,QAAAA,IAAI,EAAE,MAD6B;AAEnCC,QAAAA,WAAW,EAAE,SAFsB;AAGnCC,QAAAA,MAAM,EAAE,KAH2B;AAInCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJ0B,OAAhC,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AAEZ,YAAIA,IAAI,CAACM,MAAL,KAAgB,CAApB,EAAsB;AACpB,UAAA,MAAI,CAACf,QAAL,CAAc;AAAC1E,YAAAA,SAAS,EAAEmF,IAAI,CAAC,CAAD,CAAJ,CAAQO;AAApB,WAAd;AACD,SAFD,MAGK;AACH,UAAA,MAAI,CAAChB,QAAL,CAAc;AAAC1E,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD;AACF,OAnBD;AAoBD;AAED;;;;6BACS2F,C,EAAG;AACP,WAAKjB,QAAL,qBACKiB,CAAC,CAACC,MAAF,CAASC,IADd,EACqBF,CAAC,CAACC,MAAF,CAASE,KAD9B;AAGH;;;4BAEOH,C,EAAG;AACT,WAAKjB,QAAL,qBACKiB,CAAC,CAACC,MAAF,CAASC,IADd,EACqBF,CAAC,CAACC,MAAF,CAASG,OAD9B;AAGD;AAGF;;AACA;;;;6BACSF,I,EAAM;AACb,aAAO,KAAKpE,OAAL,CAAaoE,IAAb,CAAP;AACD;AAED;;;;8BACUA,I,EAAM;AACd,aAAO,KAAKpC,KAAL,CAAWoC,IAAX,CAAP;AACD;AAED;;;;yCACqB;AACnB,WAAKnB,QAAL,CAAc;AAAErE,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD;;;qCAEgB;AACf,WAAKqE,QAAL,CAAc;AAAErE,QAAAA,UAAU,EAAE,KAAd;AAAqBX,QAAAA,YAAY,EAAC;AAAlC,OAAd;AACD;;;mCAEc;AACb,WAAKgF,QAAL,CAAc;AAAE7E,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;sCAEgB;AACf,WAAK6E,QAAL,CAAc;AAAE7E,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;+BAES;AACR,WAAK6E,QAAL,CAAc;AAAE7E,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;;AAED;;AACA;mDAC8B;AAC5B,WAAK6E,QAAL,CAAc;AAACrE,QAAAA,UAAU,EAAE;AAAb,OAAd;AACD;AAED;;;;kDAC6B;AAAA;;AAC3BsE,MAAAA,KAAK,CAAC,KAAKP,MAAL,GAAc,eAAf,EAAgC;AACnCQ,QAAAA,IAAI,EAAE,MAD6B;AAEnCC,QAAAA,WAAW,EAAE,SAFsB;AAGnCC,QAAAA,MAAM,EAAE,KAH2B;AAInCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJ0B,OAAhC,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZ,YAAIA,IAAI,CAACM,MAAL,KAAgB,CAApB,EAAsB;AACpB,UAAA,MAAI,CAACf,QAAL,CAAc;AAAC1E,YAAAA,SAAS,EAAEmF,IAAI,CAAC,CAAD,CAAJ,CAAQO;AAApB,WAAd;AACD,SAFD,MAGK;AACH,UAAA,MAAI,CAAChB,QAAL,CAAc;AAAC1E,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD;AACF,OAlBD;AAoBD;AAED;;;;qDACgC;AAC9B,WAAK0E,QAAL,CAAc;AAACxE,QAAAA,eAAe,EAAE;AAAlB,OAAd;AACD;AAED;;;;gCACY8F,K,EAAO;AACjB;AACA,WAAK1G,KAAL,CAAW2G,OAAX,CAAmBX,IAAnB,CAAwB,UAAxB;AACD;AAED;;;;iCACaU,K,EAAM;AAAA;;AACjBA,MAAAA,KAAK,CAACE,cAAN;AACA,UAAI7B,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACAF,MAAAA,KAAK,GAAGpF,MAAM,CAACoF,KAAD,CAAN,CAAcG,EAAd,CAAiB,kBAAjB,EAAqCC,MAArC,CAA4C,YAA5C,CAAR;AAEEE,MAAAA,KAAK,CAAC,KAAKP,MAAL,GAAc,cAAf,EAA+B;AAChCQ,QAAAA,IAAI,EAAE,MAD0B;AAEhCC,QAAAA,WAAW,EAAE,SAFmB;AAGhCC,QAAAA,MAAM,EAAE,MAHwB;AAIhCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B,SAJuB;AAS9BoB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB7G,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AADF,SAAf;AATwB,OAA/B,CAAL,CAaKwF,IAbL,CAaU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACqB,IAAJ,EAAJ;AAAA,OAbb,EAcKtB,IAdL,CAcU,UAAAG,IAAI,EAAI;AAEZR,QAAAA,KAAK,CAAC,MAAI,CAACP,MAAL,GAAc,oBAAd,GAAqCC,KAAtC,EAA6C;AAChDO,UAAAA,IAAI,EAAE,MAD0C;AAEhDC,UAAAA,WAAW,EAAE,SAFmC;AAGhDC,UAAAA,MAAM,EAAE,KAHwC;AAIhDC,UAAAA,OAAO,EAAE;AACP,sBAAU,kBADH;AAEP,4BAAgB,kBAFT;AAGP,gDAAoC;AAH7B;AAJuC,SAA7C,CAAL,CAUCC,IAVD,CAUM,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SAVT,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAI;AACZ,cAAIC,KAAK,GAAG,EAAZ;;AACA,eAAK,IAAIC,CAAT,IAAcF,IAAd,EAAmB;AACjBC,YAAAA,KAAK,CAACE,IAAN,CAAWH,IAAI,CAACE,CAAD,CAAJ,CAAQ7F,QAAnB;AACD;;AAED,UAAA,MAAI,CAACkF,QAAL,CAAc;AAACjF,YAAAA,cAAc,EAAE2F;AAAjB,WAAd;AACD,SAlBD;AAmBD,OAnCL,EAmCOmB,KAnCP,CAmCa,UAAAC,GAAG,EAAI;AACd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAtCL;AAuCH;AAGD;;AAEA;;;;;;;;iCAKY;AACV,UAAI,KAAKjH,KAAL,CAAWK,MAAX,KAAsB,EAAtB,IAA4B,OAAO,KAAKL,KAAL,CAAWK,MAAlB,KAA6B,WAA7D,EAAyE;AACvE,YAAI+G,SAAS,GAAG,KAAKtF,SAAL,CAAe,KAAK9B,KAAL,CAAWK,MAA1B,CAAhB;AACA,eAAS;AAAK,UAAA,GAAG,EAAE+G,SAAV;AAAqB,UAAA,GAAG,EAAC,WAAzB;AAAqC,UAAA,KAAK,EAAC,KAA3C;AAAiD,UAAA,MAAM,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD,OAHD,MAII;AACF,eAAQ;AAAK,UAAA,EAAE,EAAG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAR;AACD;AACF,K,CAED;;;;iCACY;AAAA;;AACV,aAAQ,KAAKpH,KAAL,CAAWE,cAAX,CAA0BmH,GAA1B,CAA8B,UAACzB,IAAD,EAAO0B,KAAP,EAAiB;AACrD,eAAQ,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAGA,KAAhB;AAAuB,UAAA,GAAG,EAAE1B,IAA5B;AAAkC,UAAA,4BAA4B,EAAE,MAAI,CAACpE,4BAArE;AACN,UAAA,8BAA8B,EAAE,MAAI,CAACC,8BAD/B;AAEN,UAAA,2BAA2B,EAAE,MAAI,CAACC,2BAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAGO,OAJD,CAAR;AAMD;AAED;;;;;;;;qCAKgB;AACd,UAAI,KAAK1B,KAAL,CAAWE,cAAX,CAA0BgG,MAA1B,KAAqC,CAAzC,EAA2C;AACzC,eACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,EAAE,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,iBAAb;AAA+B,UAAA,EAAE,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,EAOI;AAAG,UAAA,EAAE,EAAC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAPJ,CADA,CADF;AAaD,OAdD,MAeK;AACH,eACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE;AAAK,UAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,EAAE,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,iBAAb;AAA+B,UAAA,EAAE,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,EAOE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK3E,UAAL,EADH,CAPF,CAFF,CADJ;AAgBD;AACF;AAED;;;;;;;;mCAKc;AACZ,UAAI,KAAKvB,KAAL,CAAWG,YAAX,CAAwB+F,MAAxB,KAAmC,CAAvC,EAA0C;AACxC,eACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAG,iBAAjB;AAAmC,UAAA,EAAE,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,EAAE,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,iBAAb;AAA+B,UAAA,EAAE,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADA,EAMI;AAAG,UAAA,EAAE,EAAC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDANJ,CADF,CADJ;AAYD,OAbD,MAcK;AACH,YAAIkB,SAAS,GAAG,KAAKvF,QAAL,CAAc,KAAK7B,KAAL,CAAWG,YAAX,CAAwB6F,QAAtC,CAAhB;AAEA,eACE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE;AAAK,UAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAOE;AAAK,UAAA,SAAS,EAAG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEoB,SAAV;AAAqB,UAAA,GAAG,EAAC,qBAAzB;AAA+C,UAAA,KAAK,EAAC,IAArD;AAA0D,UAAA,MAAM,EAAC,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,KAAKpH,KAAL,CAAWG,YAAX,CAAwBoH,SAAxB,GAAoC,KAAKvH,KAAL,CAAWG,YAAX,CAAwBqH,WAAnE,MAAZ,mDAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAQ,KAAKxH,KAAL,CAAWG,YAAX,CAAwB6F,QAAhC,CAD5B,MADF,CAFF,CAPF,CAFF,CADF;AAsBD;AACF;AAED;;;;mCACe;AACb,WAAKb,QAAL,CAAc;AAACvE,QAAAA,MAAM,EAAE;AAAT,OAAd;AACD;;;6BAEQ;AAAA;;AAEL;AACA,UAAI,KAAKZ,KAAL,CAAWS,SAAX,KAAyB,IAAzB,IAAiC,KAAKT,KAAL,CAAWU,QAAX,KAAwB,EAA7D,EAAgE;AAC9D,eACE;AAAK,UAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,IAArB;AAA2B,UAAA,KAAK,EAAG,GAAnC;AAAwC,UAAA,MAAM,EAAE,CAAhD;AAAmD,UAAA,IAAI,EAAE,GAAzD;AAA8D,UAAA,KAAK,EAAE,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF;AAKD,OAND,MAOI;AACF,YAAM+G,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,cAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,cAAXC,IAAW,QAAXA,IAAW;AACzC,cAAIC,OAAO,GAAGlI,MAAM,CAACgI,IAAD,CAAN,CAAaxC,MAAb,CAAoB,YAApB,CAAd;;AAEA,cAAI,MAAI,CAAClF,KAAL,CAAWS,SAAX,CAAqBoH,QAArB,CAA8BD,OAA9B,CAAJ,EAA2C;AACzC,mBAAO,eAAP;AACD;;AACD,iBAAO,IAAP;AACD,SAPA;;AAQF,eACI;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AACE,UAAA,IAAI,EAAE,KAAK5H,KAAL,CAAWc,UADnB;AAEE,UAAA,OAAO,EAAE,KAAKM,kBAFhB;AAGE,6BAAgB,oBAHlB;AAIE,8BAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,WAAD;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqC;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,WAAtC,CAArC,CALF,EAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EACE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8B,KAAKpB,KAAL,CAAWG,YAAX,CAAwB6F,QAAtD,CADF,MADF,EAIE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmC;AAAK,UAAA,GAAG,EAAE,KAAKnE,QAAL,CAAc,KAAK7B,KAAL,CAAWG,YAAX,CAAwB6F,QAAtC,CAAV;AAA2D,UAAA,GAAG,EAAC,qBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnC,CAJF,CADJ,CANJ,EAcE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAK7E,cAAtB;AAAsC,UAAA,KAAK,EAAC,SAA5C;AAAsD,UAAA,SAAS,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAdF,CADF,EAsBF,oBAAC,MAAD;AACE,UAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWM,IADnB;AAEE,UAAA,OAAO,EAAE,KAAKS,YAFhB;AAGE,6BAAgB,oBAHlB;AAIE,8BAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,WAAD;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,0BAAtC,CANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,EAIE,oBAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,MAAM,EAAC,OAFX;AAGI,UAAA,KAAK,EAAC,YAHV;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,QALtB;AAKgC,UAAA,QAAQ,EAAE,KAAK2B,QAL/C;AAMI,UAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAYI,oBAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,MAAM,EAAC,OAFX;AAGI,UAAA,KAAK,EAAC,aAHV;AAII,UAAA,IAAI,EAAC,SAJT;AAKI,UAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWO,OALtB;AAK+B,UAAA,QAAQ,EAAE,KAAKqB,QAL9C;AAMI,UAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ,EAoBM,oBAAC,QAAD;AACE,UAAA,OAAO,EAAE,KAAK5B,KAAL,CAAWQ,MADtB;AAEE,UAAA,QAAQ,EAAE,KAAKmB,OAFjB;AAIE,UAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApBN,EA0BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1BN,CAPF,EAmCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKZ,YAAtB;AAAoC,UAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKE,QAAtB;AAAgC,UAAA,KAAK,EAAC,SAAtC;AAAgD,UAAA,SAAS,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAnCF,CAtBE,EAmEF;AAAK,UAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK6G,UAAL,EADH,EAEE;AAAK,UAAA,EAAE,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwB,KAAK9H,KAAL,CAAWU,QAAnC,MAFF,CAnEE,EAyED,KAAKY,cAAL,EAzEC,EA2ED,KAAKD,YAAL,EA3EC,EA6EF;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,EAAE,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,iBAAb;AAA+B,UAAA,EAAE,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CA7EE,EAqFF,oBAAC,QAAD;AACI,UAAA,aAAa,EAAEoG,aADnB;AAEI,UAAA,MAAM,EAAC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArFE,EA0FF;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,KAAK,EAAE;AAACM,YAAAA,SAAS,EAAE,KAAK/H,KAAL,CAAWY;AAAvB,WAA/B;AAA+D,UAAA,QAAQ,EAAE,KAAKmB,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEnC,UAAV;AAAsB,UAAA,GAAG,EAAC,aAA1B;AAAwC,UAAA,KAAK,EAAE;AAACoI,YAAAA,eAAe,EAAE,KAAKhI,KAAL,CAAWa;AAA7B,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAG,UAAA,KAAK,EAAE;AAACoH,YAAAA,KAAK,EAAE,KAAKjI,KAAL,CAAWa;AAAnB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,EAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAI,KAAKoB,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEpC,aAAV;AAAyB,UAAA,GAAG,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CALF,CA1FE,CADJ;AAwGD;AACF;;;;EAzjBgBd,S;;AA4jBnB,eAAee,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n// foreign imports\nimport Button from '@material-ui/core/Button';\nimport Medicine from './Medicine';\nimport Calendar from 'react-calendar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport moment from \"moment-timezone\";\nimport { BarLoader } from 'react-spinners';\n\n// imgs\nimport footerHome from \"./images/iconhome.png\";\nimport footerProfile from \"./images/smile.png\"\n\nclass Home extends Component {\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      medicine: '',\n      medicine_array: [],\n      reward_array: [],\n      image: '',\n      avatar:'',\n      open: false,\n      medDesc: '',\n      Sunday: false,\n      completed: null,\n      username:'',\n      medicine_render: false,\n      scroll: '',\n      navColor: \"\",\n      showReward: false\n    }\n\n    /* dialog methods */\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleOK = this.handleOK.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleOKReward = this.handleOKReward.bind(this);\n    this.handleCancelReward = this.handleCancelReward.bind(this);\n\n    /* render and rerendering methods */\n    this.renderReward = this.renderReward.bind(this);\n    this.renderMedicine = this.renderMedicine.bind(this);\n    this.getMedList = this.getMedList.bind(this);\n    this.rerenderParentCallbackReward = this.rerenderParentCallbackReward.bind(this);\n    this.rerenderParentCallbackMedicine = this.rerenderParentCallbackMedicine.bind(this);\n    this.rerenderParentCallbackDates = this.rerenderParentCallbackDates.bind(this);\n\n    /* state changing methods */\n    this.onCheck = this.onCheck.bind(this);\n    this.onChange = this.onChange.bind(this);\n\n\n    /* image accessor methods*/\n    this.getImage = this.getImage.bind(this);\n    this.getAvatar = this.getAvatar.bind(this);\n\n    /* Scrolling, submission, and rerouting */\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.goToProfile = this.goToProfile.bind(this);\n\n    this.REWARDS = {\n      icecream: require('./images/rewards/icecream.png'),\n      baking: require('./images/rewards/baking.png'),\n      ball: require('./images/rewards/ball.png'),\n      beach: require('./images/rewards/beach.png'),\n      bike: require('./images/rewards/bike.png'),\n      book: require('./images/rewards/book.png'),\n      bowling: require('./images/rewards/bowling.png'),\n      card: require('./images/rewards/card.png'),\n      carnival: require('./images/rewards/carnival.png'),\n      chess: require('./images/rewards/chess.png'),\n      clothes: require('./images/rewards/clothes.png'),\n      ferris: require('./images/rewards/ferris.png'),\n      fire: require('./images/rewards/fire.png'),\n      game: require('./images/rewards/game.png'),\n      gift: require('./images/rewards/gift.png'),\n      hamburger: require('./images/rewards/hamburger.png'),\n      hotdog: require('./images/rewards/hotdog.png'),\n      jewelry: require('./images/rewards/jewelry.png'),\n      kart: require('./images/rewards/kart.png'),\n      makeup: require('./images/rewards/makeup.png'),\n      movies: require('./images/rewards/movies.png'),\n      paint: require('./images/rewards/paint.png'),\n      picnic: require('./images/rewards/picnic.png'),\n      pizza: require('./images/rewards/pizza.png'),\n      puzzle: require('./images/rewards/puzzle.png'),\n      shopping: require('./images/rewards/shopping.png'),\n      sneakers: require('./images/rewards/sneakers.png'),\n      swimming: require('./images/rewards/swimming.png'),\n      teddy: require('./images/rewards/teddy.png'),\n      tennis: require('./images/rewards/tennis.png')\n    }\n\n    this.HEADS = {\n      bunny: require('./images/heads/bunny.png'),\n      cat: require('./images/heads/cat.png'),\n      dinosaur: require('./images/heads/dinosaur.png'),\n      dog: require('./images/heads/dog.png'),\n      frog: require('./images/heads/frog.png'),\n      monkey: require('./images/heads/monkey.png'),\n      panda: require('./images/heads/panda.png'),\n      penguin: require('./images/heads/penguin.png'),\n      raccoon: require('./images/heads/raccoon.png'),\n      unicorn: require('./images/heads/unicorn.png'),\n    }\n\n    this.server = \"http://localhost:5000\";\n  }\n\n  /* COMPONENT DID MOUNT\n   *\n   * Gets the user's medication, reward, avatar, and completed days.\n   */\n  componentDidMount() {\n    var today = new Date()\n    today.setHours(0, 0, 0, 0)\n    today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n    this.setState({navColor: \"#1871ff\"});\n\n    fetch(this.server + \"/getMedicine?date=\" + today, {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n    .then(res => res.json())\n    .then(data => {\n      var thing = []\n      for (var x in data){\n        thing.push(data[x].medicine);\n      }\n\n      this.setState({medicine_array: thing})\n    });\n\n    fetch(this.server + \"/getReward\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      if (typeof data[0] != 'undefined'){\n          this.setState({reward_array: data[0], image: data[0].img_path })\n      }\n    });\n\n    fetch(this.server + \"/getAvatar\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n\n      if (typeof data != 'undefined' && data !== null){\n          this.setState({username: data.username, avatar: data.avatar_path});\n      }\n    });\n\n\n    fetch(this.server + \"/getCompleted\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n\n      if (data.length !== 0){\n        this.setState({completed: data[0].completed_dates })\n      }\n      else {\n        this.setState({completed: []})\n      }\n    });\n  }\n\n  /* STATE CHANGING METHODS */\n  onChange(e) {\n       this.setState({\n           [e.target.name]: e.target.value\n       });\n   }\n\n   onCheck(e) {\n     this.setState({\n         [e.target.name]: e.target.checked\n     });\n   }\n\n\n  /* IMAGE ACCESSORS */\n  /* Accessor for the reward images. */\n  getImage(name) {\n    return this.REWARDS[name];\n  }\n\n  /* Accessor for the avatar images. */\n  getAvatar(name) {\n    return this.HEADS[name];\n  }\n\n  /* DIALOG HANDLERS */\n  handleCancelReward() {\n    this.setState({ showReward: false });\n  };\n\n  handleOKReward() {\n    this.setState({ showReward: false, reward_array:[] });\n  };\n\n  handleCancel() {\n    this.setState({ open: false });\n  };\n\n  handleClickOpen(){\n    this.setState({ open: true });\n  };\n\n  handleOK(){\n    this.setState({ open: false });\n  };\n\n  /* RERENDER METHODS */\n  /* Show reward dialog. */\n  rerenderParentCallbackReward(){\n    this.setState({showReward: true});\n  }\n\n  /* IUpdate calendar days. */\n  rerenderParentCallbackDates(){\n    fetch(this.server + \"/getCompleted\", {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      if (data.length !== 0){\n        this.setState({completed: data[0].completed_dates })\n      }\n      else {\n        this.setState({completed: []})\n      }\n    });\n\n  }\n\n  /* Update medicine rerender. */\n  rerenderParentCallbackMedicine(){\n    this.setState({medicine_render: true});\n  }\n\n  /* ROUTING METHOD */\n  goToProfile(event) {\n    // go /profile\n    this.props.history.push(\"/profile\");\n  }\n\n  /* Adds medication for a user. Updates medicine list after added. */\n  handleSubmit(event){\n    event.preventDefault()\n    var today = new Date()\n    today.setHours(0, 0, 0, 0)\n    today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n\n      fetch(this.server + \"/addMedicine\", {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Credentials': true,\n          },\n            body: JSON.stringify({\n              medicine: this.state.medicine\n            })\n          })\n          .then(res => res.text())\n          .then(data => {\n\n            fetch(this.server + \"/getMedicine?date=\" + today, {\n              mode: 'cors',\n              credentials: 'include',\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true,\n              },\n            })\n            .then(res => res.json())\n            .then(data => {\n              var thing = []\n              for (var x in data){\n                thing.push(data[x].medicine);\n              }\n\n              this.setState({medicine_array: thing})\n            });\n          }).catch(err => {\n            // handle err\n            console.log(err)\n          })\n  }\n\n\n  /* METHODS USED IN RENDERING */\n\n  /*\n   * Renders user conditionally.\n   * If no avatar, renders an empty circle.\n   * Else, shows their avatar.\n   */\n  renderUser(){\n    if (this.state.avatar !== \"\" && typeof this.state.avatar !== 'undefined'){\n      var thumbnail = this.getAvatar(this.state.avatar);\n      return ( <img src={thumbnail} alt=\"thumbnail\" width=\"120\" height=\"120\"/> );\n    }\n    else{\n      return (<div id = \"circle\"> </div>);\n    }\n  }\n\n  // helper method to render medications\n  getMedList(){\n    return (this.state.medicine_array.map((data, index) => {\n      return (<Medicine key= {index} med={data} rerenderParentCallbackReward={this.rerenderParentCallbackReward}\n        rerenderParentCallbackMedicine={this.rerenderParentCallbackMedicine}\n        rerenderParentCallbackDates={this.rerenderParentCallbackDates}\n        />) })\n    );\n  }\n\n  /*\n   * Renders medicine conditionally.\n   * If no medicine listed for today, renders message.\n   * Else, shows the medications that they must take today.\n   */\n  renderMedicine(){\n    if (this.state.medicine_array.length === 0){\n      return (\n        <div className=\"med-container\">\n        <div className=\"deargod-med\">\n          <div className=\"deargod-top\" id=\"medicationNoneTop\">\n            <p className=\"deargodTopTitle\" id=\"med\">\n              My Medication\n            </p>\n          </div>\n\n            <p id=\"notif\"> You don't have any medications for today.  </p>\n        </div>\n        </div>\n      );\n    }\n    else {\n      return (\n          <div className=\"med-container\">\n\n            <div className = \"deargod-med\">\n              <div className=\"deargod-top\" id=\"medicationNoneTop\">\n                <p className=\"deargodTopTitle\" id=\"med\">\n                My Medication\n                </p>\n              </div>\n\n              <div className=\"med-displayed-innner\">\n                {this.getMedList()}\n              </div>\n            </div>\n          </div>\n      );\n    }\n  }\n\n  /*\n   * Renders reward conditionally.\n   * If no reward associated with the user, renders a message.\n   * Else, shows the reward associated with the user.\n   */\n  renderReward(){\n    if (this.state.reward_array.length === 0 ){\n      return (\n          <div className=\"rewards-container\">\n            <div className = \"deargod-rewards\" id=\"rewardsNone\">\n            <div className=\"deargod-top\" id=\"medicationNoneTop\">\n              <p className=\"deargodTopTitle\" id=\"med\">\n                Current Reward\n              </p>\n            </div>\n                <p id=\"notif\"> You don't have any ongoing rewards.</p>\n            </div>\n          </div>\n      );\n    }\n    else {\n      var thumbnail = this.getImage(this.state.reward_array.img_path);\n\n      return (\n        <div className=\"rewards-container\">\n\n          <div className = \"deargod-rewards\">\n            <div className=\"deargod-top\">\n              <p className=\"deargodTopTitle\">\n                My Reward\n              </p>\n            </div>\n\n            <div className = \"rewards-home-inner\">\n              <img src={thumbnail} alt=\"thumbnail of reward\" width=\"60\" height=\"60\"/>\n              <div className = \"rewards-home-info\">\n                <p>You have <span>{this.state.reward_array.goalCount - this.state.reward_array.actualCount} </span> day(s) left until\n                  you reach your reward for <span> {this.state.reward_array.img_path}</span>!\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n\n    }\n  }\n\n  /* Method for scrolling. */\n  handleScroll() {\n    this.setState({scroll: \"none\"});\n  }\n\n  render() {\n\n      // highlights completed dates if they exist.\n      if (this.state.completed === null || this.state.username === \"\"){\n        return (\n          <div className = \"loading-container\">\n            <BarLoader sizeUnit={\"px\"} width ={200} height={8} size={500} color={'#01c13b'} />\n            <div className=\"loading-text\">Loading... </div>\n          </div>);\n      }\n      else{\n        const tileClassName = ({ date, view }) => {\n         let getDate = moment(date).format(\"YYYY/MM/DD\");\n\n         if (this.state.completed.includes(getDate)){\n           return \"highlight-day\";\n         }\n         return null;\n       };\n      return (\n          <div className = \"containerHome\">\n            <Dialog\n              open={this.state.showReward}\n              onClose={this.handleCancelReward}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n              <DialogTitle id=\"alert-dialog-title\"><div className=\"rewards-popup-title\">{\"Congrats!\"}</div></DialogTitle>\n                <DialogContent>\n                    <div className=\"rewards-popup-wrapper\">\n                      <div className=\"rewards-popup\">You've reached your goal and can now receive your reward of\n                        <span className=\"bold-this\"> {this.state.reward_array.img_path}</span>!\n                      </div>\n                      <div className=\"rewards-popup-img\"><img src={this.getImage(this.state.reward_array.img_path)} alt=\"thumbnail of reward\"/></div>\n                    </div>\n                </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleOKReward} color=\"primary\" autoFocus>\n                  OK\n                </Button>\n              </DialogActions>\n            </Dialog>\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleCancel}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Please enter a password.\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              To check off your medication a password is required.\n            </DialogContentText>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"Medication\"\n                name=\"medicine\"\n                value={this.state.medicine} onChange={this.onChange}\n                fullWidth\n              />\n              <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  label=\"Description\"\n                  name=\"medDesc\"\n                  value={this.state.medDesc} onChange={this.onChange}\n                  fullWidth\n                />\n                <Checkbox\n                  checked={this.state.Sunday}\n                  onChange={this.onCheck}\n\n                  name=\"Sunday\"\n                />\n                <p> Sunday </p>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleCancel} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleOK} color=\"primary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className = \"user\">\n          {this.renderUser()}\n          <div id =\"name\">Hello, {this.state.username}!</div>\n        </div>\n\n\n        {this.renderMedicine()}\n\n        {this.renderReward()}\n\n        <div className=\"calendar-container\">\n          <div className=\"deargod-top\" id=\"medicationNoneTop\">\n            <p className=\"deargodTopTitle\" id=\"med\">\n              My History\n            </p>\n          </div>\n        </div>\n\n        <Calendar\n            tileClassName={tileClassName}\n            locale=\"en\"\n        />\n\n        <div className=\"footer\" style={{boxShadow: this.state.scroll}} onScroll={this.handleScroll}>\n          <div className=\"toHome\">\n            <img src={footerHome} alt=\"footer-home\" style={{backgroundColor: this.state.navColor}}/>\n            <p style={{color: this.state.navColor}}>home</p>\n          </div>\n          <div className=\"toProfile\" onClick = {this.goToProfile}>\n            <img src={footerProfile} alt=\"footer-profile\"/>\n            <p>me</p>\n          </div>\n        </div>\n\n      </div>\n        );\n    }\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}