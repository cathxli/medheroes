{"ast":null,"code":"import _classCallCheck from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Medicine.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nvar Medicine =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Medicine, _Component);\n\n  function Medicine(props) {\n    var _this;\n\n    _classCallCheck(this, Medicine);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Medicine).call(this, props));\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.setState({\n        cancel: true\n      });\n    };\n\n    _this.handleOK = function () {\n      _this.changeColor();\n\n      _this.setState({\n        cancel: false\n      });\n    };\n\n    _this.state = {\n      color: '',\n      open: false,\n      textFieldValue: '',\n      cancel: ''\n    };\n    _this.changeColor = _this.changeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOK = _this.handleOK.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTextFieldChange = _this.handleTextFieldChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Medicine, [{\n    key: \"handleTextFieldChange\",\n    value: function handleTextFieldChange(e) {\n      this.setState({\n        textFieldValue: e.target.value\n      });\n    }\n  }, {\n    key: \"changeColor\",\n    value: function changeColor() {\n      var _this2 = this;\n\n      if (this.state.color === '#4AB3F4') {\n        return;\n      }\n\n      fetch(\"http://localhost:5000/verifyPassword\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        },\n        body: JSON.stringify({\n          password: this.state.textFieldValue\n        })\n      }).then(function (res) {\n        return res.text();\n      }).then(function (data) {\n        console.log(data);\n\n        if (data === \"OK\") {\n          fetch(\"http://localhost:5000/addDate\", {\n            mode: 'cors',\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Credentials': true\n            },\n            body: JSON.stringify({\n              medicine: _this2.props.med\n            })\n          }); // is totla num medicatoin = num blue circs??\n          // then tell to increment rewards.\n\n          var newColor;\n          newColor = '#4AB3F4';\n\n          _this2.setState({\n            color: newColor\n          });\n\n          _this2.setState({\n            open: false\n          });\n        }\n      }).catch(function (err) {\n        // handle err\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = today.getFullYear();\n      today = mm + '/' + dd + '/' + yyyy;\n      fetch(\"http://localhost:5000/getDate?name=\" + this.props.med, {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var dates = [];\n\n        for (var x in data[0].dates) {\n          var d = new Date(data[0].dates[x]).getTime();\n          dates.push(d);\n        } // console.log(data[0])\n        //  var d = new Date(data[0].dates[0])\n        //  console.log(d)\n        // // uhh this has to be changed too\n        //\n        // //console.log(data[0].dates)\n        // var dates = data[0].dates\n        // cut all of the dates stuff off\n\n\n        today = new Date();\n        today.setHours(0, 0, 0, 0); //console.log(dates)\n\n        if (dates.includes(today.getTime())) {\n          return _this3.setState({\n            color: '#4AB3F4'\n          });\n        } else {\n          return _this3.setState({\n            color: 'white'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"one-medicine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleCancel,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Please enter a password.\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"To check off your medication a password is required.\"), React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\" // id=\"name\"\n        ,\n        label: \"Password\",\n        value: this.state.textFieldValue,\n        onChange: this.handleTextFieldChange,\n        type: \"password\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCancel,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleOK,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"OK\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \" \", this.props.med), React.createElement(\"div\", {\n        className: \"circly\",\n        onClick: this.handleClickOpen,\n        style: {\n          background: this.state.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \" \"));\n    }\n  }]);\n\n  return Medicine;\n}(Component);\n\nexport default Medicine;","map":{"version":3,"sources":["/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Medicine.js"],"names":["React","Component","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","TextField","Medicine","props","handleClickOpen","setState","open","handleCancel","cancel","handleOK","changeColor","state","color","textFieldValue","bind","handleTextFieldChange","e","target","value","fetch","mode","credentials","method","headers","body","JSON","stringify","password","then","res","text","data","console","log","medicine","med","newColor","catch","err","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","json","dates","x","d","getTime","push","setHours","includes","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass Medicine extends Component {\n    constructor (props){\n        super(props)\n\n        this.state = {\n            color: '',\n            open: false,\n            textFieldValue: '',\n            cancel: ''\n        }\n\n        this.changeColor = this.changeColor.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n\n        this.handleOK = this.handleOK.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\n    }\n\n  handleTextFieldChange(e) {\n      this.setState({\n          textFieldValue: e.target.value\n      });\n  }\n\n    changeColor(){\n      if (this.state.color === '#4AB3F4'){\n        return;\n      }\n\n      fetch(\"http://localhost:5000/verifyPassword\", {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Credentials': true,\n          },\n            body: JSON.stringify({\n              password: this.state.textFieldValue,\n            })\n          })\n          .then(res => res.text())\n          .then(data => {\n            console.log(data)\n            if (data === \"OK\"){\n              fetch(\"http://localhost:5000/addDate\", {\n                  mode: 'cors',\n                  credentials: 'include',\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Credentials': true,\n                  },\n                    body: JSON.stringify({\n                      medicine: this.props.med,\n                    })\n                  })\n\n\n              // is totla num medicatoin = num blue circs??\n                // then tell to increment rewards.\n\n              var newColor;\n              newColor = '#4AB3F4';\n              this.setState({color: newColor});\n              this.setState({ open: false });\n            }\n          }).catch(err => {\n            // handle err\n            console.log(err)\n          })\n\n    }\n\n    componentDidMount(){\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = today.getFullYear();\n\n      today = mm + '/' + dd + '/' + yyyy;\n\n      fetch(\"http://localhost:5000/getDate?name=\" + this.props.med, {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Credentials': true,\n          },\n      })\n      .then(res => res.json())\n      .then(data => {\n\n        var dates = []\n\n        for (var x in data[0].dates){\n          var d = new Date(data[0].dates[x]).getTime()\n          dates.push( d)\n        }\n        // console.log(data[0])\n        //  var d = new Date(data[0].dates[0])\n        //  console.log(d)\n        // // uhh this has to be changed too\n        //\n        // //console.log(data[0].dates)\n        // var dates = data[0].dates\n\n        // cut all of the dates stuff off\n        today = new Date()\n        today.setHours(0, 0, 0, 0)\n\n        //console.log(dates)\n        if (dates.includes(today.getTime())){\n          return this.setState({color: '#4AB3F4'})\n        }\n        else {\n          return this.setState({color: 'white'})\n        }\n\n      });\n    }\n\n    handleClickOpen = () => {\n  this.setState({ open: true });\n};\n\n  handleCancel = () => {\n    this.setState({ open: false });\n    this.setState({ cancel: true });\n  };\n\n  handleOK = () => {\n    this.changeColor();\n\n\n    this.setState({ cancel: false });\n\n  };\n\n\n  render(){\n    return (\n      <div className = \"one-medicine\">\n\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Please enter a password.\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            To check off your medication a password is required.\n          </DialogContentText>\n          <TextField\n              autoFocus\n              margin=\"dense\"\n              // id=\"name\"\n              label=\"Password\"\n              value={this.state.textFieldValue} onChange={this.handleTextFieldChange}\n              type=\"password\"\n              fullWidth\n            />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleOK} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n        <p> {this.props.med}</p>\n        <div className = \"circly\" onClick ={this.handleClickOpen} style ={{background: this.state.color}}> </div>\n      </div>\n    );\n  }\n}\n\nexport default Medicine;\n"]},"metadata":{},"sourceType":"module"}