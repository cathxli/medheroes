{"ast":null,"code":"import _classCallCheck from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Medicine.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'; // import moment from \"moment\";\n\nimport moment from \"moment-timezone\";\n\nvar Medicine =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Medicine, _Component);\n\n  function Medicine(props) {\n    var _this;\n\n    _classCallCheck(this, Medicine);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Medicine).call(this, props));\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.setState({\n        cancel: true\n      });\n    };\n\n    _this.handleCancelReward = function () {\n      _this.setState({\n        showReward: false\n      });\n    };\n\n    _this.handleOK = function () {\n      _this.changeColor();\n\n      _this.setState({\n        cancel: false\n      });\n    };\n\n    _this.handleOKReward = function () {\n      _this.setState({\n        showReward: false\n      });\n    };\n\n    _this.state = {\n      color: '',\n      open: false,\n      textFieldValue: '',\n      cancel: '',\n      showReward: false\n    };\n    _this.changeColor = _this.changeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOK = _this.handleOK.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTextFieldChange = _this.handleTextFieldChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOKReward = _this.handleOKReward.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancelReward = _this.handleCancelReward.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.server = \"http:/localhost:5000\";\n    return _this;\n  }\n\n  _createClass(Medicine, [{\n    key: \"handleTextFieldChange\",\n    value: function handleTextFieldChange(e) {\n      this.setState({\n        textFieldValue: e.target.value\n      });\n    }\n  }, {\n    key: \"changeColor\",\n    value: function changeColor() {\n      var _this2 = this;\n\n      // CATH: change this.state.color === \"#6ADC83\"\n      // if (this.state.color === '#4AB3F4'){\n      //   return;\n      // }\n      if (this.state.color === '#6ADC83') {\n        return;\n      }\n\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n      today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n      fetch(this.server + \"/verifyPassword\", {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        },\n        body: JSON.stringify({\n          password: this.state.textFieldValue\n        })\n      }).then(function (res) {\n        return res.text();\n      }).then(function (data) {\n        console.log(data);\n\n        if (data === \"OK\") {\n          fetch(_this2.server + \"/addDate\", {\n            mode: 'cors',\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Credentials': true\n            },\n            body: JSON.stringify({\n              medicine: _this2.props.med,\n              date: today\n            })\n          }).then(function (res) {\n            return res.text();\n          }).then(function (data) {\n            if (data === \"equal\") {\n              fetch(_this2.server + \"/incrementReward\", {\n                mode: 'cors',\n                credentials: 'include',\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Credentials': true\n                }\n              }).then(function (res) {\n                return res.text();\n              }).then(function (data) {\n                if (data === \"goal\") {\n                  // make a post to set all the checked for today to false??\n                  _this2.setState({\n                    showReward: true\n                  });\n\n                  _this2.props.rerenderParentCallback();\n\n                  console.log(\"The reward should be deleted.\");\n                }\n              });\n            }\n          }); // change the checked to true ^\n          // is totla num medicatoin = num blue circs??\n          // then tell to increment rewards.\n\n          var newColor; //CATH: change newColor to #6ADC83 (green)\n          //   newColor = '#4AB3F4';\n\n          newColor = '#6ADC83';\n\n          _this2.setState({\n            color: newColor\n          });\n\n          _this2.setState({\n            open: false\n          });\n        }\n      }).catch(function (err) {\n        // handle err\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      console.log(\"Medicine componentDidMount\");\n      var today = new Date(); // var dd = String(today.getDate()).padStart(2, '0');\n      // var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      // var yyyy = today.getFullYear();\n      // today = mm + '/' + dd + '/' + yyyy;\n\n      var getDate = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n      console.log(\"THIS IS THE MEDNAME SENT TO THE SERVER\", this.props.med);\n      fetch(this.server + \"/getDate?name=\" + this.props.med, {\n        mode: 'cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var dates = [];\n        console.log(\"full data\", data);\n\n        if (typeof data[0] != 'undefined') {\n          for (var x in data[0].dates) {\n            // var d = new Date(data[0].dates[x]);\n            var d = data[0].dates[x];\n            console.log(\"Please be the correct thing\", d);\n            var momentd = moment(new Date(d)).tz(\"America/New_York\").format('YYYY/MM/DD'); // let momentd = moment(d).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n\n            dates.push(momentd);\n          }\n        }\n\n        console.log(\"the actual dates\", dates); // console.log(data[0])\n        //  var d = new Date(data[0].dates[0])\n        //  console.log(d)\n        // // uhh this has to be changed too\n        //\n        // //console.log(data[0].dates)\n        // var dates = data[0].dates\n        // cut all of the dates stuff off\n        // today = new Date()\n        // today.setHours(0, 0, 0, 0)\n        //\n        // //console.log(dates)\n\n        console.log(_this3.props.med, \" ALL DATES\", dates);\n        console.log(\"TODAY\", getDate); // console.log(\"IS TODAY IN DATES?\", dates.includes(getDate))\n\n        if (dates.includes(getDate)) {\n          //  CATH: change color: to color: #6ADC83\n          //return this.setState({color: '#4AB3F4'})\n          console.log(\"check off med, color it green\");\n          return _this3.setState({\n            color: '#6ADC83'\n          });\n        } else {\n          console.log(\"meds aren't checked off, color it white\"); // make a post to set to false!\n\n          return _this3.setState({\n            color: 'white'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"one-medicine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.showReward,\n        onClose: this.handleCancelReward,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Reward achieved!\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Congrats!\"), \"You've reached your goal count!\"), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleOKReward,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"OK\"))), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleCancel,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Please enter a password.\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"To check off your medication a password is required.\"), React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\" // id=\"name\"\n        ,\n        label: \"Password\",\n        value: this.state.textFieldValue,\n        onChange: this.handleTextFieldChange,\n        type: \"password\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCancel,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleOK,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"OK\"))), React.createElement(\"p\", {\n        className: \"medicine-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \" \", this.props.med), React.createElement(\"div\", {\n        className: \"circly\",\n        onClick: this.handleClickOpen,\n        style: {\n          background: this.state.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \" \"));\n    }\n  }]);\n\n  return Medicine;\n}(Component);\n\nexport default Medicine;","map":{"version":3,"sources":["/Users/catherineli/Documents/GitHub/webapps2019/react_app/src/Medicine.js"],"names":["React","Component","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","TextField","moment","Medicine","props","handleClickOpen","setState","open","handleCancel","cancel","handleCancelReward","showReward","handleOK","changeColor","handleOKReward","state","color","textFieldValue","bind","handleTextFieldChange","server","e","target","value","today","Date","setHours","tz","format","fetch","mode","credentials","method","headers","body","JSON","stringify","password","then","res","text","data","console","log","medicine","med","date","rerenderParentCallback","newColor","catch","err","getDate","json","dates","x","d","momentd","push","includes","background"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;IAGMC,Q;;;;;AACF,oBAAaC,KAAb,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,UA6LnBC,eA7LmB,GA6LD,YAAM;AAC1B,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KA/LsB;;AAAA,UAiMrBC,YAjMqB,GAiMN,YAAM;AACnB,YAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;;AACA,YAAKD,QAAL,CAAc;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KApMoB;;AAAA,UAsMrBC,kBAtMqB,GAsMA,YAAM;AACzB,YAAKJ,QAAL,CAAc;AAAEK,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KAxMoB;;AAAA,UA0MrBC,QA1MqB,GA0MV,YAAM;AACf,YAAKC,WAAL;;AAGA,YAAKP,QAAL,CAAc;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAAd;AAED,KAhNoB;;AAAA,UAkNrBK,cAlNqB,GAkNJ,YAAM;AACrB,YAAKR,QAAL,CAAc;AAAEK,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KApNoB;;AAGf,UAAKI,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETT,MAAAA,IAAI,EAAE,KAFG;AAGTU,MAAAA,cAAc,EAAE,EAHP;AAITR,MAAAA,MAAM,EAAE,EAJC;AAKTE,MAAAA,UAAU,EAAE;AALH,KAAb;AAQA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBK,IAAjB,uDAAnB;AACA,UAAKb,eAAL,GAAuB,MAAKA,eAAL,CAAqBa,IAArB,uDAAvB;AACA,UAAKN,QAAL,GAAgB,MAAKA,QAAL,CAAcM,IAAd,uDAAhB;AACA,UAAKV,YAAL,GAAoB,MAAKA,YAAL,CAAkBU,IAAlB,uDAApB;AACA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BD,IAA3B,uDAA7B;AACA,UAAKJ,cAAL,GAAsB,MAAKA,cAAL,CAAoBI,IAApB,uDAAtB;AACA,UAAKR,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBQ,IAAxB,uDAA1B;AAEA,UAAKE,MAAL,GAAc,sBAAd;AAnBe;AAoBlB;;;;0CAEqBC,C,EAAG;AACvB,WAAKf,QAAL,CAAc;AACVW,QAAAA,cAAc,EAAEI,CAAC,CAACC,MAAF,CAASC;AADf,OAAd;AAGD;;;kCAEY;AAAA;;AACT;AACF;AACA;AACA;AAEE,UAAI,KAAKR,KAAL,CAAWC,KAAX,KAAqB,SAAzB,EAAmC;AAC/B;AACH;;AAED,UAAIQ,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACAF,MAAAA,KAAK,GAAGtB,MAAM,CAACsB,KAAD,CAAN,CAAcG,EAAd,CAAiB,kBAAjB,EAAqCC,MAArC,CAA4C,YAA5C,CAAR;AAEFC,MAAAA,KAAK,CAAC,KAAKT,MAAL,GAAc,iBAAf,EAAkC;AACnCU,QAAAA,IAAI,EAAE,MAD6B;AAEnCC,QAAAA,WAAW,EAAE,SAFsB;AAGnCC,QAAAA,MAAM,EAAE,MAH2B;AAInCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B,SAJ0B;AASjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWE;AADF,SAAf;AAT2B,OAAlC,CAAL,CAaKqB,IAbL,CAaU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAbb,EAcKF,IAdL,CAcU,UAAAG,IAAI,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAIA,IAAI,KAAK,IAAb,EAAkB;AAChBZ,UAAAA,KAAK,CAAC,MAAI,CAACT,MAAL,GAAc,UAAf,EAA2B;AAC5BU,YAAAA,IAAI,EAAE,MADsB;AAE5BC,YAAAA,WAAW,EAAE,SAFe;AAG5BC,YAAAA,MAAM,EAAE,MAHoB;AAI5BC,YAAAA,OAAO,EAAE;AACP,wBAAU,kBADH;AAEP,8BAAgB,kBAFT;AAGP,kDAAoC;AAH7B,aAJmB;AAS1BC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBQ,cAAAA,QAAQ,EAAE,MAAI,CAACxC,KAAL,CAAWyC,GADF;AAEjBC,cAAAA,IAAI,EAAEtB;AAFW,aAAf;AAToB,WAA3B,CAAL,CAcKc,IAdL,CAcU,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WAdb,EAeKF,IAfL,CAeU,UAAAG,IAAI,EAAI;AACZ,gBAAIA,IAAI,KAAK,OAAb,EAAqB;AACnBZ,cAAAA,KAAK,CAAC,MAAI,CAACT,MAAL,GAAc,kBAAf,EAAmC;AACpCU,gBAAAA,IAAI,EAAE,MAD8B;AAEpCC,gBAAAA,WAAW,EAAE,SAFuB;AAGpCC,gBAAAA,MAAM,EAAE,MAH4B;AAIpCC,gBAAAA,OAAO,EAAE;AACP,4BAAU,kBADH;AAEP,kCAAgB,kBAFT;AAGP,sDAAoC;AAH7B;AAJ2B,eAAnC,CAAL,CAUKK,IAVL,CAUU,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAVb,EAWKF,IAXL,CAWU,UAAAG,IAAI,EAAI;AACZ,oBAAIA,IAAI,KAAK,MAAb,EAAoB;AAClB;AACA,kBAAA,MAAI,CAACnC,QAAL,CAAc;AAACK,oBAAAA,UAAU,EAAE;AAAb,mBAAd;;AACA,kBAAA,MAAI,CAACP,KAAL,CAAW2C,sBAAX;;AACAL,kBAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;AAEF,eAnBL;AAoBD;AACF,WAtCL,EADgB,CAwCZ;AAGJ;AACE;;AAEF,cAAIK,QAAJ,CA9CgB,CA+ChB;AACA;;AACAA,UAAAA,QAAQ,GAAG,SAAX;;AACA,UAAA,MAAI,CAAC1C,QAAL,CAAc;AAACU,YAAAA,KAAK,EAAEgC;AAAR,WAAd;;AACA,UAAA,MAAI,CAAC1C,QAAL,CAAc;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAd;AACD;AACF,OArEL,EAqEO0C,KArEP,CAqEa,UAAAC,GAAG,EAAI;AACd;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,OAxEL;AA0ED;;;wCAEkB;AAAA;;AACfR,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACF,UAAInB,KAAK,GAAG,IAAIC,IAAJ,EAAZ,CAFiB,CAGjB;AACA;AACA;AAEA;;AACA,UAAI0B,OAAO,GAAGjD,MAAM,CAACsB,KAAD,CAAN,CAAcG,EAAd,CAAiB,kBAAjB,EAAqCC,MAArC,CAA4C,YAA5C,CAAd;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAuD,KAAKvC,KAAL,CAAWyC,GAAlE;AAEAhB,MAAAA,KAAK,CAAC,KAAKT,MAAL,GAAc,gBAAd,GAAiC,KAAKhB,KAAL,CAAWyC,GAA7C,EAAkD;AACnDf,QAAAA,IAAI,EAAE,MAD6C;AAEnDC,QAAAA,WAAW,EAAE,SAFsC;AAGnDC,QAAAA,MAAM,EAAE,KAH2C;AAInDC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,8CAAoC;AAH7B;AAJ0C,OAAlD,CAAL,CAUCK,IAVD,CAUM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACa,IAAJ,EAAJ;AAAA,OAVT,EAWCd,IAXD,CAWM,UAAAG,IAAI,EAAI;AAEZ,YAAIY,KAAK,GAAG,EAAZ;AACEX,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;;AAEF,YAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,WAAtB,EAAkC;AAChC,eAAK,IAAIa,CAAT,IAAcb,IAAI,CAAC,CAAD,CAAJ,CAAQY,KAAtB,EAA4B;AAE1B;AACE,gBAAIE,CAAC,GAAGd,IAAI,CAAC,CAAD,CAAJ,CAAQY,KAAR,CAAcC,CAAd,CAAR;AACAZ,YAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CY,CAA3C;AACA,gBAAIC,OAAO,GAAGtD,MAAM,CAAC,IAAIuB,IAAJ,CAAS8B,CAAT,CAAD,CAAN,CAAoB5B,EAApB,CAAuB,kBAAvB,EAA2CC,MAA3C,CAAkD,YAAlD,CAAd,CALwB,CAM1B;;AACAyB,YAAAA,KAAK,CAACI,IAAN,CAAWD,OAAX;AACD;AACF;;AACDd,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCU,KAAhC,EAhBY,CAkBZ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACEX,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACvC,KAAL,CAAWyC,GAAvB,EAA4B,YAA5B,EAA0CQ,KAA1C;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,OAArB,EAhCU,CAiCV;;AACF,YAAIE,KAAK,CAACK,QAAN,CAAeP,OAAf,CAAJ,EAA4B;AAC1B;AACA;AACET,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,iBAAO,MAAI,CAACrC,QAAL,CAAc;AAACU,YAAAA,KAAK,EAAE;AAAR,WAAd,CAAP;AACH,SALD,MAMK;AACD0B,UAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EADC,CAEH;;AACA,iBAAO,MAAI,CAACrC,QAAL,CAAc;AAACU,YAAAA,KAAK,EAAE;AAAR,WAAd,CAAP;AACD;AAEF,OAzDD;AA0DD;;;6BA4BK;AACN,aAEE;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWJ,UADnB;AAEE,QAAA,OAAO,EAAE,KAAKD,kBAFhB;AAGE,2BAAgB,oBAHlB;AAIE,4BAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,kBAAtC,CANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,oCAPF,EAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKI,cAAtB;AAAsC,QAAA,KAAK,EAAC,SAA5C;AAAsD,QAAA,SAAS,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAbF,CAFA,EAsBA,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWR,IADnB;AAEE,QAAA,OAAO,EAAE,KAAKC,YAFhB;AAGE,2BAAgB,oBAHlB;AAIE,4BAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,0BAAtC,CANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,EAIE,oBAAC,SAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,MAAM,EAAC,OAFX,CAGI;AAHJ;AAII,QAAA,KAAK,EAAC,UAJV;AAKI,QAAA,KAAK,EAAE,KAAKO,KAAL,CAAWE,cALtB;AAKsC,QAAA,QAAQ,EAAE,KAAKE,qBALrD;AAMI,QAAA,IAAI,EAAC,UANT;AAOI,QAAA,SAAS,MAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAPF,EAqBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKX,YAAtB;AAAoC,QAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKI,QAAtB;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAgD,QAAA,SAAS,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CArBF,CAtBA,EAqDE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgC,KAAKR,KAAL,CAAWyC,GAA3C,CArDF,EAsDE;AAAK,QAAA,SAAS,EAAG,QAAjB;AAA0B,QAAA,OAAO,EAAG,KAAKxC,eAAzC;AAA0D,QAAA,KAAK,EAAG;AAACsD,UAAAA,UAAU,EAAE,KAAK5C,KAAL,CAAWC;AAAxB,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtDF,CAFF;AA2DD;;;;EApRoBtB,S;;AAuRvB,eAAeS,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n// import moment from \"moment\";\nimport moment from \"moment-timezone\";\n\n\nclass Medicine extends Component {\n    constructor (props){\n        super(props)\n\n        this.state = {\n            color: '',\n            open: false,\n            textFieldValue: '',\n            cancel: '',\n            showReward: false\n        }\n\n        this.changeColor = this.changeColor.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleOK = this.handleOK.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\n        this.handleOKReward = this.handleOKReward.bind(this);\n        this.handleCancelReward = this.handleCancelReward.bind(this);\n\n        this.server = \"http:/localhost:5000\";\n    }\n\n    handleTextFieldChange(e) {\n      this.setState({\n          textFieldValue: e.target.value\n      });\n    }\n\n    changeColor(){\n        // CATH: change this.state.color === \"#6ADC83\"\n      // if (this.state.color === '#4AB3F4'){\n      //   return;\n      // }\n\n        if (this.state.color === '#6ADC83'){\n            return;\n        }\n\n        var today = new Date();\n        today.setHours(0, 0, 0, 0);\n        today = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n\n      fetch(this.server + \"/verifyPassword\", {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Credentials': true,\n          },\n            body: JSON.stringify({\n              password: this.state.textFieldValue,\n            })\n          })\n          .then(res => res.text())\n          .then(data => {\n            console.log(data)\n            if (data === \"OK\"){\n              fetch(this.server + \"/addDate\", {\n                  mode: 'cors',\n                  credentials: 'include',\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Credentials': true,\n                  },\n                    body: JSON.stringify({\n                      medicine: this.props.med,\n                        date: today,\n                    })\n                  })\n                  .then(res => res.text())\n                  .then(data => {\n                    if (data === \"equal\"){\n                      fetch(this.server + \"/incrementReward\", {\n                          mode: 'cors',\n                          credentials: 'include',\n                          method: 'POST',\n                          headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json',\n                            'Access-Control-Allow-Credentials': true,\n                          },\n                          })\n                          .then(res => res.text())\n                          .then(data => {\n                            if (data === \"goal\"){\n                              // make a post to set all the checked for today to false??\n                              this.setState({showReward: true})\n                              this.props.rerenderParentCallback();\n                              console.log(\"The reward should be deleted.\");\n                            }\n\n                          });\n                    }\n                  });\n                  // change the checked to true ^\n\n\n              // is totla num medicatoin = num blue circs??\n                // then tell to increment rewards.\n\n              var newColor;\n              //CATH: change newColor to #6ADC83 (green)\n              //   newColor = '#4AB3F4';\n              newColor = '#6ADC83';\n              this.setState({color: newColor});\n              this.setState({ open: false });\n            }\n          }).catch(err => {\n            // handle err\n            console.log(err)\n          })\n\n    }\n\n    componentDidMount(){\n        console.log(\"Medicine componentDidMount\");\n      var today = new Date();\n      // var dd = String(today.getDate()).padStart(2, '0');\n      // var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      // var yyyy = today.getFullYear();\n\n      // today = mm + '/' + dd + '/' + yyyy;\n      let getDate = moment(today).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n      console.log(\"THIS IS THE MEDNAME SENT TO THE SERVER\" , this.props.med)\n\n      fetch(this.server + \"/getDate?name=\" + this.props.med, {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Credentials': true,\n          },\n      })\n      .then(res => res.json())\n      .then(data => {\n\n        var dates = []\n          console.log(\"full data\", data)\n\n        if (typeof data[0] != 'undefined'){\n          for (var x in data[0].dates){\n\n            // var d = new Date(data[0].dates[x]);\n              var d = data[0].dates[x];\n              console.log(\"Please be the correct thing\", d)\n              let momentd = moment(new Date(d)).tz(\"America/New_York\").format('YYYY/MM/DD')\n            // let momentd = moment(d).tz(\"America/New_York\").format(\"YYYY/MM/DD\");\n            dates.push(momentd);\n          }\n        }\n        console.log(\"the actual dates\", dates)\n\n        // console.log(data[0])\n        //  var d = new Date(data[0].dates[0])\n        //  console.log(d)\n        // // uhh this has to be changed too\n        //\n        // //console.log(data[0].dates)\n        // var dates = data[0].dates\n\n        // cut all of the dates stuff off\n        // today = new Date()\n        // today.setHours(0, 0, 0, 0)\n        //\n        // //console.log(dates)\n          console.log(this.props.med, \" ALL DATES\", dates)\n          console.log(\"TODAY\", getDate)\n          // console.log(\"IS TODAY IN DATES?\", dates.includes(getDate))\n        if (dates.includes(getDate)){\n          //  CATH: change color: to color: #6ADC83\n          //return this.setState({color: '#4AB3F4'})\n            console.log(\"check off med, color it green\")\n            return this.setState({color: '#6ADC83'})\n        }\n        else {\n            console.log(\"meds aren't checked off, color it white\")\n          // make a post to set to false!\n          return this.setState({color: 'white'})\n        }\n\n      });\n    }\n\n    handleClickOpen = () => {\n  this.setState({ open: true });\n};\n\n  handleCancel = () => {\n    this.setState({ open: false });\n    this.setState({ cancel: true });\n  };\n\n  handleCancelReward = () => {\n    this.setState({ showReward: false });\n  };\n\n  handleOK = () => {\n    this.changeColor();\n\n\n    this.setState({ cancel: false });\n\n  };\n\n  handleOKReward = () => {\n    this.setState({ showReward: false });\n  };\n\n\n  render(){\n    return (\n\n      <div className = \"one-medicine\">\n\n      <Dialog\n        open={this.state.showReward}\n        onClose={this.handleCancelReward}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Reward achieved!\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Congrats!\n          </DialogContentText>\n            You've reached your goal count!\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleOKReward} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Please enter a password.\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            To check off your medication a password is required.\n          </DialogContentText>\n          <TextField\n              autoFocus\n              margin=\"dense\"\n              // id=\"name\"\n              label=\"Password\"\n              value={this.state.textFieldValue} onChange={this.handleTextFieldChange}\n              type=\"password\"\n              fullWidth\n            />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleOK} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n        <p className=\"medicine-title\"> {this.props.med}</p>\n        <div className = \"circly\" onClick ={this.handleClickOpen} style ={{background: this.state.color}}> </div>\n      </div>\n    );\n  }\n}\n\nexport default Medicine;\n"]},"metadata":{},"sourceType":"module"}